<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>乱码三千 – 分享实用IT技术</title>
  
  <subtitle>乱码三千 – 码出一个新世界</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://code.newban.cn/"/>
  <updated>2024-04-20T08:29:17.728Z</updated>
  <id>https://code.newban.cn/</id>
  
  <author>
    <name>乱码三千</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于安装nodejs指定版本</title>
    <link href="https://code.newban.cn/470.html"/>
    <id>https://code.newban.cn/470.html</id>
    <published>2024-04-20T04:14:19.000Z</published>
    <updated>2024-04-20T08:29:17.728Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近升级了<code>nodejs</code>版本为最新的v21版本后, <code>Hexo</code>博客在使用<code>hexo d</code>指令时突然报错, 如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError [ERR_INVALID_ARG_TYPE]: The <span class="string">"mode"</span> argument must be of <span class="built_in">type</span> number. Received an instance of Object</span><br></pre></td></tr></table></figure><p>为了减少折腾 于是乎我将版本回退到<code>v12.17.0</code>后问题解决</p><p>方法很简单 如下</p><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><ol><li><p>安装<code>nvm</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install n</span><br></pre></td></tr></table></figure></li><li><p>安装指定版本的<code>nodejs</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n install 12.17.0</span><br></pre></td></tr></table></figure></li></ol><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近升级了&lt;code&gt;nodejs&lt;/code&gt;版本为最新的v21版本后, &lt;code&gt;Hexo&lt;/code&gt;博客在使用&lt;code&gt;hexo
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://code.newban.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>编写一个hexo插件 实现将博客中的原创文章同步到微信公众号</title>
    <link href="https://code.newban.cn/469.html"/>
    <id>https://code.newban.cn/469.html</id>
    <published>2024-04-19T02:14:19.000Z</published>
    <updated>2024-04-19T13:45:48.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个需求很早以前就有了 由于各种原因耽搁了  这次准备把这个功能搞定</p><p>我的大本营在博客上 微信公众号只是附带 不过考虑到微信搜索流量以及公众号的广告收益 所以 还等什么呢 自动化地搞起来 嘿嘿😜</p><h2 id="功能实现流程"><a href="#功能实现流程" class="headerlink" title="功能实现流程"></a>功能实现流程</h2><p>流程如下:</p><ol><li>在执行<code>hexo d</code>指令是 获取所有文章<code>html</code></li><li>将内容中带有<code>本文为作者原创</code>的文章过滤出来 并排除<code>wx_pushed.txt</code>中已经同步的文章</li><li>替换文章中的图片</li><li>增加封面图</li><li>替换内链样式</li><li>推送文章到公众号</li><li>推送成功后将文章文件名称记录到<code>wx_pushed.txt</code>中 防止后面重复推送</li></ol><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><p>插件代码如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hexo-wx-sync.js 自动将hexo博客中的原创文章同步到微信公众号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">'axios'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; log &#125; = <span class="built_in">require</span>(<span class="string">'console'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">'cheerio'</span>);</span><br><span class="line"><span class="keyword">var</span> req = <span class="built_in">require</span>(<span class="string">'request-promise'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> PLUGIN_NAME = <span class="string">'hexo-wx-sync'</span>;</span><br><span class="line"><span class="keyword">const</span> PUSHED_ARTICLES_FILE = <span class="string">'wx_pushed.txt'</span>;</span><br><span class="line"><span class="keyword">const</span> config = hexo.config.wx_sync</span><br><span class="line"><span class="keyword">const</span> parentDir = path.dirname(__dirname);<span class="comment">//当前文件的父目录 也就是hexo</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在执行 hexo d 时触发</span></span><br><span class="line">hexo.extend.generator.register(<span class="string">'wechat'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//获取微信公众号accesToken</span></span><br><span class="line">   accessToken=getAccessToken()</span><br><span class="line">  <span class="comment">// 获取所有文章</span></span><br><span class="line">  <span class="keyword">const</span> posts = locals.posts;</span><br><span class="line">  <span class="comment">// 遍历所有文章</span></span><br><span class="line">  posts.forEach(<span class="keyword">async</span> post =&gt; &#123;<span class="comment">//post.content 获取的是html格式内容</span></span><br><span class="line">    <span class="comment">// 获取文章路径</span></span><br><span class="line">    <span class="keyword">const</span> postPath = parentDir + <span class="string">"/source/"</span> + post.source;</span><br><span class="line">    <span class="comment">// 读取markdown文章内容</span></span><br><span class="line">    <span class="keyword">const</span> content = fs.readFileSync(postPath, <span class="string">'utf8'</span>);</span><br><span class="line">    <span class="comment">// 过滤符合条件的文章并替换内容</span></span><br><span class="line">    <span class="keyword">const</span> filteredContent = <span class="keyword">await</span> filterAndReplaceContent(post.content);</span><br><span class="line">    <span class="comment">// 增加封面图</span></span><br><span class="line">     <span class="keyword">const</span> coverImageId = <span class="keyword">await</span> addCoverImage(<span class="string">"https://source.unsplash.com/900x400/?book,library"</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"准备发布"</span> + content)</span><br><span class="line">    <span class="comment">// 调用微信接口发布文章</span></span><br><span class="line">    publishToWechat(content, post, coverImageId);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">filterAndReplaceContent</span>(<span class="params">content</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 使用 cheerio 解析 HTML 内容</span></span><br><span class="line">  <span class="keyword">const</span> $ = cheerio.load(<span class="string">`&lt;article&gt;<span class="subst">$&#123;content&#125;</span>&lt;/article&gt;`</span>);</span><br><span class="line">  <span class="comment">// 过滤带有'本文为作者原创'的文章 closest表示查找当前元素最近的祖元素</span></span><br><span class="line">  <span class="keyword">const</span> filteredContent = $(<span class="string">'p:contains("本文为作者原创")'</span>).closest(<span class="string">'article'</span>).html();</span><br><span class="line">  <span class="comment">// 替换文章中的图片和内链样式</span></span><br><span class="line">  <span class="comment">// 这里假设你已经实现了相应的函数，比如 replaceImages 和 replaceInternalLinks</span></span><br><span class="line">  <span class="keyword">const</span> replacedContent = <span class="keyword">await</span> replaceImages(filteredContent);</span><br><span class="line">  <span class="keyword">const</span> finalContent = <span class="keyword">await</span> replaceInternalLinks(replacedContent);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"文章过滤完成"</span>)</span><br><span class="line">  <span class="keyword">return</span> finalContent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">publishToWechat</span>(<span class="params">parsedContent, metadata, coverImageId</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  axios.post(<span class="string">`https://api.weixin.qq.com/cgi-bin/draft/add?access_token=<span class="subst">$&#123;accessToken&#125;</span>`</span>, &#123;</span><br><span class="line">    articles: [&#123;</span><br><span class="line">      title: <span class="string">`<span class="subst">$&#123;metadata.title&#125;</span> `</span>,</span><br><span class="line">      thumb_media_id: coverImageId, <span class="comment">// 刚才取到的封面图素材 id</span></span><br><span class="line">      author: <span class="string">'乱码三千'</span>,</span><br><span class="line">      digest: metadata.title,</span><br><span class="line">      content: parsedContent, <span class="comment">// 刚才处理好的文章</span></span><br><span class="line">      content_source_url: <span class="string">`http://code.newban.cn/463.html`</span>, <span class="comment">// 非必填，这里我写的是我博客这篇文章的 URL</span></span><br><span class="line">      need_open_comment: <span class="number">1</span>, <span class="comment">// 是否打开留言功能</span></span><br><span class="line">      show_cover_pic: <span class="number">0</span>, <span class="comment">// 是否把封面图添加到文章开头</span></span><br><span class="line">    &#125;],</span><br><span class="line">  &#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//推送成功会返回一个media_id </span></span><br><span class="line">    da = response.data</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'media_id'</span> <span class="keyword">in</span> da) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;metadata.title&#125;</span> successfully pushed to WeChat.`</span>);</span><br><span class="line">      <span class="comment">// 记录已推送的文章名称到 wx_pushed.txt 文件中</span></span><br><span class="line">      fs.appendFileSync(PUSHED_ARTICLES_FILE, <span class="string">`<span class="subst">$&#123;metadata.source.replace(<span class="string">"_post/"</span>, <span class="string">""</span>).replace(<span class="string">"md"</span>, <span class="string">"html"</span>)&#125;</span>\n`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(da)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">`Failed to push <span class="subst">$&#123;metadata.title&#125;</span> to WeChat: <span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">  &#125;);;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 替换文章中的图片</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">replaceImages</span>(<span class="params">content</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"开始替换图片"</span>)</span><br><span class="line">  <span class="keyword">const</span> $ = cheerio.load(content);</span><br><span class="line">  $(<span class="string">'img'</span>).each(<span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> newUrl = <span class="keyword">await</span> uploadImg($(<span class="keyword">this</span>).attr(<span class="string">'src'</span>));</span><br><span class="line">    $(<span class="keyword">this</span>).attr(<span class="string">'src'</span>, newUrl);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"图片替换完成"</span>)</span><br><span class="line">  <span class="keyword">return</span> $.html();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">option</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> req(option).then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"请求成功: "</span> + response);</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line">  &#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"请求错误: "</span> + err);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&#123;"media_id":"fTLNXU-IBCWKkfWOlCRS17gXwNG5_75-7aBJQalLz1BBBE5UJ43cj3JfxCyYiTN-"&#125;'</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传图片到素材库并获取新的图片地址</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">uploadImg</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"需要上传的图片地址:"</span> + url)</span><br><span class="line">  <span class="keyword">const</span> imageStream = (<span class="keyword">await</span> axios.get(url, &#123; <span class="attr">responseType</span>: <span class="string">'stream'</span> &#125;)).data;</span><br><span class="line">  <span class="keyword">const</span> formData = &#123; <span class="attr">media</span>: imageStream &#125;;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> request(&#123;</span><br><span class="line">    url: <span class="string">`https://api.weixin.qq.com/cgi-bin/media/uploadimg?access_token=<span class="subst">$&#123;accessToken&#125;</span>`</span>,</span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    formData,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(res).url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">addCoverImage</span>(<span class="params">coverImage</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 实现封面图增加逻辑</span></span><br><span class="line">  <span class="keyword">const</span> coverImageStream = (<span class="keyword">await</span> axios.get(coverImage, &#123; <span class="attr">responseType</span>: <span class="string">'stream'</span> &#125;)).data;</span><br><span class="line">  <span class="keyword">const</span> coverImageRes = <span class="keyword">await</span> request(&#123;</span><br><span class="line">    url: <span class="string">`https://api.weixin.qq.com/cgi-bin/material/add_material?access_token=<span class="subst">$&#123;accessToken&#125;</span>&amp;type=image`</span>,</span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    formData: &#123; <span class="attr">media</span>: coverImageStream &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> coverImageId = <span class="built_in">JSON</span>.parse(coverImageRes).media_id;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"封面图id:"</span> + coverImageId)</span><br><span class="line">  <span class="keyword">return</span> coverImageId;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAccessToken</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> axios.get(<span class="string">`https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=<span class="subst">$&#123;config.appid&#125;</span>&amp;secret=<span class="subst">$&#123;config.secret&#125;</span>`</span>).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.status !== <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> res.data.access_token;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">`获取accesToken失败`</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>使用方法:</strong></p><p>在<code>script</code>目录下新建一个<code>自定义名称.js</code>文件,  注意名称不要使用<code>index.js</code>, 将上面代码粘贴过去, 然后在<code>config</code>配置文件中配置<code>AppID</code>和<code>AppSecret</code> 如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将文章同步到微信公众号</span></span><br><span class="line"><span class="attr">wx_sync:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    appid:</span> <span class="string">你的appid</span></span><br><span class="line"><span class="attr">    secret:</span> <span class="string">你的secret</span></span><br></pre></td></tr></table></figure><h2 id="关于AppID和AppSecret的获取"><a href="#关于AppID和AppSecret的获取" class="headerlink" title="关于AppID和AppSecret的获取"></a>关于AppID和AppSecret的获取</h2><p>开发者ID(<code>AppID</code>)和开发者密码(<code>AppSecret</code>)可以在公众号后台基本配置中获取:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240419133336814.png" alt="image-20240419133336814"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240419133636776.png" alt="image-20240419133636776"></p><p>为了确保接口能正常访问, 还需要设置接口请求所在地的ip地址, 如果你在阿里云服务器调用这些接口 则填入服务器的<code>ip</code> , 如果是本地电脑 则在百度搜索IP获取当前公网IP:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240419134212591.png" alt="image-20240419134212591"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240419133544001.png" alt="image-20240419133544001"></p><p>文章参考 : </p><ul><li>《<a href="https://code.newban.cn/468.html">博客文章自动同步微信公众号实践</a>》</li><li>《<a href="https://hexo.io/zh-cn/api/filter" target="_blank" rel="noopener">Hexo官方文档</a>》</li></ul><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这个需求很早以前就有了 由于各种原因耽搁了  这次准备把这个功能搞定&lt;/p&gt;
&lt;p&gt;我的大本营在博客上 微信公众号只是附带 不过考虑到微信搜
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://code.newban.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>博客文章自动同步微信公众号实践</title>
    <link href="https://code.newban.cn/468.html"/>
    <id>https://code.newban.cn/468.html</id>
    <published>2024-04-17T04:14:19.000Z</published>
    <updated>2024-04-19T05:43:55.551Z</updated>
    
    <content type="html"><![CDATA[<p>本文来自 zhiyi 的个人博客实践，可以通过开放能力将其他平台的文章同步到微信公众号上，对刚学前端的同学（有自己的博客就更好了）来说，是对后台接口链路的一个不错的探索。</p><h3 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h3><p>微信官方提供了素材管理的 API，通过 API 可以很方便地进行同步。在使用 API 之前需要进行鉴权，所以需要先获取 access token。微信公众号中不允许出现外域图片，因此需要把文章里的图片全部使用微信的图片上传接口处理后替换。此外，微信公众号支持 HTML 标签但是只支持内联样式，所以必须把外联样式全部转换为内联样式。</p><p>所以，同步到微信公众号的操作，需要按照以下步骤：</p><ol><li>使用公众号的 appid 和 secret 换取 access token。</li><li>把文章中的所有图片用微信图片上传接口上传，并替换文章里的 URL。这一步需要使用 access token 鉴权。</li><li>将文章中的所有外联 css 转为内联样式。</li><li>调用微信素材管理接口，同步文章。这里需要使用 access token 鉴权。</li></ol><h3 id="获取-access-token"><a href="#获取-access-token" class="headerlink" title="获取 access token"></a>获取 access token</h3><p>获取 access token 本身没什么难度，使用微信公众号的 appid 和 secret 就可以从接口获取到。需要注意的是，这个接口有调用频率限制，短时间内调用次数不能过多。</p><p>所以我们从微信的接口获取 access token 之后应该将它缓存，之后直接从缓存中获取，缓存失效了再重新从接口获取。这里的缓存机制使用了 Redis，因为 Redis 提供的过期失效机制正好满足我们的需求。</p><p>首先我们在 Koa 的全局变量里注册 Redis，以便在各种场景调用。这里，我们把它写成 Koa 中间件的形式，并把几个 Redis 常用操作 Promise 化。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">redisConfig</span>) =&gt;</span><span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> client = redis.createClient(redisConfig.port, redisConfig.host);</span><br><span class="line">  client.auth(redisConfig.password);</span><br><span class="line">  ctx.redis = &#123;</span><br><span class="line">    <span class="keyword">get</span>: (key) =&gt; new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      client.get(key, (err, result) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(result);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">set</span>: (key, value) =&gt; new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      client.set(key, value, (err, result) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(result);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;),</span><br><span class="line">    expire: <span class="function">(<span class="params">key, expire</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      client.expire(key, expire, (err, result) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(result);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;),</span><br><span class="line">    del: <span class="function">(<span class="params">key</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      client.del(key, (err, result) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(result);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">await</span> next();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>之后，在获取<code>access token</code> 时，先尝试从<code>Redis</code>中取。如果获取到了，就直接返回结果；如果没取到，就向微信接口请求并写入 Redis。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> accessToken = <span class="keyword">await</span> ctx.redis.get(<span class="string">'wechatAccessToken'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!accessToken) &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> axios.get(<span class="string">`https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=<span class="subst">$&#123;wechatConfig.appid&#125;</span>&amp;secret=<span class="subst">$&#123;wechatConfig.secret&#125;</span>`</span>);</span><br><span class="line">      <span class="keyword">if</span> (res?.status !== <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'get access token error'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      accessToken = res?.data?.access_token;</span><br><span class="line">      <span class="keyword">const</span> expiresIn = res?.data?.expires_in;</span><br><span class="line">      <span class="keyword">if</span> (!accessToken) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'get access token error'</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> ctx.redis.set(<span class="string">'wechatAccessToken'</span>, accessToken);</span><br><span class="line">        <span class="keyword">await</span> ctx.redis.expire(<span class="string">'wechatAccessToken'</span>, expiresIn);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(accessToken);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这样，我们就实现了获取并缓存<code>access token</code>。</p><h3 id="上传并替换图片"><a href="#上传并替换图片" class="headerlink" title="上传并替换图片"></a>上传并替换图片</h3><p>我的文章内容是一段 HTML 代码字符串，这是由前端传入的。不管前端使用什么编辑器，这一步都需要先转为 HTML 字符串再操作。</p><p>首先需要把文章内容中的图片全部找出来，这里直接用正则即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> images = parsedContent.match(<span class="regexp">/&lt;img.*?(?:&gt;|\/&gt;)/gi</span>);</span><br><span class="line"><span class="keyword">if</span> (images) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> image <span class="keyword">of</span> images) &#123;</span><br><span class="line">    <span class="keyword">const</span> src = image.match(<span class="regexp">/src=['"]?([^'"]*)['"]?/i</span>);</span><br><span class="line">    <span class="keyword">const</span> url = src?.[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 对取出的 URL 做处理</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先匹配所有的 <code>&lt;img /&gt;</code> 标签，之后针对每个标签再做一次匹配，取到其中的 src 值（也就是图片的 URL）。</p><p>对匹配到的图片 URL 依次下载为 stream 并上传到微信公众号图片上传接口，之后使用返回的微信域内 URL 替换原文中的 URL。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (url) &#123;</span><br><span class="line">  <span class="keyword">const</span> imageStream = (<span class="keyword">await</span> axios.get(url, &#123; <span class="attr">responseType</span>: <span class="string">'stream'</span> &#125;)).data;</span><br><span class="line">  <span class="keyword">const</span> formData = &#123; <span class="attr">media</span>: imageStream &#125;;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> request(&#123;</span><br><span class="line">    url: <span class="string">`https://api.weixin.qq.com/cgi-bin/media/uploadimg?access_token=<span class="subst">$&#123;accessToken&#125;</span>`</span>,</span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    formData,</span><br><span class="line">  &#125;);</span><br><span class="line">  parsedContent = parsedContent.replace(url, <span class="built_in">JSON</span>.parse(res).url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上传图片的接口当然需要鉴权，这里的 access token 是直接使用上一步封装好的方法获取的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> accessToken = <span class="keyword">await</span> getWechatAccessToken(ctx);</span><br></pre></td></tr></table></figure><p>需要注意的是，上传到微信公众号必须使用 request 或者基于 request 的 request-promise。因为 node 环境的 axios 对 form-data 格式发送文件的 POST 并不能很好地支持。</p><p>不要忘记了对封面图也做一样的处理，因为使用 API 编辑公众号图文必须添加封面图，封面图也必须是微信域内的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> coverImageStream = (<span class="keyword">await</span> axios.get(coverImage, &#123; <span class="attr">responseType</span>: <span class="string">'stream'</span> &#125;)).data;</span><br><span class="line"><span class="keyword">const</span> coverImageRes = <span class="keyword">await</span> request(&#123;</span><br><span class="line">  url: <span class="string">`https://api.weixin.qq.com/cgi-bin/material/add_material?access_token=<span class="subst">$&#123;accessToken&#125;</span>&amp;type=image`</span>,</span><br><span class="line">  method: <span class="string">'POST'</span>,</span><br><span class="line">  formData: &#123; <span class="attr">media</span>: coverImageStream &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> coverImageId = <span class="built_in">JSON</span>.parse(coverImageRes).media_id;</span><br></pre></td></tr></table></figure><p>这里需要注意的是，上传封面图的接口和上传图片的接口是不一样的，要注意区分。最后我们拿到的是封面图的素材 id，这个 id 我们后面创建图文素材时会用到。</p><p>把封面图和文章中的图片都替换一遍后，我们就完成了这一步。</p><h3 id="外联-CSS-转为内联"><a href="#外联-CSS-转为内联" class="headerlink" title="外联 CSS 转为内联"></a>外联 CSS 转为内联</h3><p>这一步我本来以为会很麻烦，但是幸运的是，在 node 上（前端浏览器等环境不可以用这个包，会报错）有一个名为 <a href="https://mp.weixin.qq.com/s/mZeuVB6lpXQ1yKNULeG5tw" target="_blank" rel="noopener">juice</a> 的 npm 包可以帮我们一行代码完成任务：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">parsedContent = juice(<span class="string">`</span></span><br><span class="line"><span class="string">  &lt;style&gt;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;cssString&#125;</span></span></span><br><span class="line"><span class="string">  &lt;/style&gt;</span></span><br><span class="line"><span class="string">  &lt;div&gt;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;parsedContent&#125;</span></span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br></pre></td></tr></table></figure><p>这里的 <code>cssString</code> 是定义好的字符串，事先把需要应用的 CSS 代码定义好一个字符串变量即可；第一个参数则是需要处理的 HTML 代码，也就是上一步替换图片 URL 的结果。</p><h3 id="调用接口创建素材"><a href="#调用接口创建素材" class="headerlink" title="调用接口创建素材"></a>调用接口创建素材</h3><p>到这一步已经没什么问题了，按照微信开发文档调用接口即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> axios.post(<span class="string">`https://api.weixin.qq.com/cgi-bin/draft/add?access_token=<span class="subst">$&#123;accessToken&#125;</span>`</span>, &#123;</span><br><span class="line">  articles: [&#123;</span><br><span class="line">    title: <span class="string">'你的文章标题'</span>,</span><br><span class="line">    thumb_media_id: coverImageId, <span class="comment">// 刚才取到的封面图素材 id</span></span><br><span class="line">    author: <span class="string">'文章作者'</span>,</span><br><span class="line">    digest: <span class="string">'文章摘要'</span>,</span><br><span class="line">    content: parsedContent, <span class="comment">// 刚才处理好的文章</span></span><br><span class="line">    content_source_url: <span class="string">'原文链接'</span>, <span class="comment">// 非必填，这里我写的是我博客这篇文章的 URL</span></span><br><span class="line">    need_open_comment: <span class="number">1</span>, <span class="comment">// 是否打开留言功能</span></span><br><span class="line">    show_cover_pic: <span class="number">0</span>, <span class="comment">// 是否把封面图添加到文章开头</span></span><br><span class="line">  &#125;],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样就可以成功把文章同步到微信公众号后台的素材库中。最后在微信公众号官方客户端 “订阅号助手” 操作一下，就可以成功把文章发布出去了。当然，最后的发布操作也可以调用 API 解决，不过官方客户端本身就有这个功能，而且官方客户端的 “预览” 功能可以让我提前看到效果，所以我就不必多此一举了。</p><h3 id="尚未解决的小问题"><a href="#尚未解决的小问题" class="headerlink" title="尚未解决的小问题"></a>尚未解决的小问题</h3><p>虽然同步到微信公众号这个功能帮我打通了在手机上创作到发布的整个链路，但是还是有两个小问题暂时没法解决：</p><ol><li>微信公众号未提供声明原创的接口，官方客户端也没有这个功能，因此想要声明原创文章还是必须在电脑上操作。</li><li>微信公众号网页版管理后台支持对封面图进行自定义裁剪，而通过 API 指定封面图则只能使用图片中间部分。</li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Overview.html" target="_blank" rel="noopener">微信公众号开发文档</a></p><p><strong>本文转载自:</strong> <a href="https://mp.weixin.qq.com/s/mZeuVB6lpXQ1yKNULeG5tw" target="_blank" rel="noopener">微信公众号</a></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文来自 zhiyi 的个人博客实践，可以通过开放能力将其他平台的文章同步到微信公众号上，对刚学前端的同学（有自己的博客就更好了）来说，是对后台接口链路的一个不错的探索。&lt;/p&gt;
&lt;h3 id=&quot;整体思路&quot;&gt;&lt;a href=&quot;#整体思路&quot; class=&quot;headerlink
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://code.newban.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>2024年关于新浪图床失效的解决方法</title>
    <link href="https://code.newban.cn/466.html"/>
    <id>https://code.newban.cn/466.html</id>
    <published>2024-04-17T02:14:19.000Z</published>
    <updated>2024-04-18T11:59:06.459Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很多早期的站长基本使用新浪的图床, 新浪图床免费又稳定, 受到很多人的青睐, 我本人不怎么用新浪图床, 但是手上有一批素材, 引用的是新浪服务器中的图片, 目前这些图片无论是在浏览器还是在<code>Markdown</code>编辑器中都无法显示</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240417181012252.png" alt="image-20240417181012252"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240417181029759.png" alt="image-20240417181029759"></p><p>这已经不是简单的防盗链了 应该是新浪服务器做了某种屏蔽处理</p><h2 id="检测服务器和链接是否正常"><a href="#检测服务器和链接是否正常" class="headerlink" title="检测服务器和链接是否正常"></a>检测服务器和链接是否正常</h2><p>首先我们要确保新浪服务器中有该图片文件,  可以通过以下几种方式检测:</p><ol><li><p>用<code>VScode</code>编辑器中打开文档 然后鼠标停留在图片链接上, 如果能显示图片, 说明该链接有效</p><p> <img src="https://gitee.com/songjianzaina/site_img/raw/master/img/2024-04-17%2018-02-18.2024-04-17%2018_02_58.gif" alt="2024-04-17 18-02-18.2024-04-17 18_02_58"></p></li><li><p>用<code>PostMan</code>或者<code>ApiPost</code>进行请求访问<br> <img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240417181652619.png" alt="image-20240417181652619"></p></li><li><p>使用下载工具进行下载</p><p> <img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240417181820927.png" alt="image-20240417181820927"></p></li></ol><p>值得庆幸的是 新浪服务器还没有挂 我们还有足够的时间来对图片进行转移和备份</p><h2 id="防盗链临时解决方法"><a href="#防盗链临时解决方法" class="headerlink" title="防盗链临时解决方法"></a>防盗链临时解决方法</h2><p>为了使图片迅速恢复访问, 我们可以使用第三方缓存服务来解决防盗链问题, 有以下四种方式可行:</p><ol><li><p><strong>WordPress</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://i0.wp.com/图片地址（图片地址要掉 https://）</span><br></pre></td></tr></table></figure></li><li><p><strong>Weserv.nl</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://images.weserv.nl/?url=图片地址</span><br></pre></td></tr></table></figure></li><li><p><strong>百度 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://image.baidu.com/search/down?url=图片地址</span><br></pre></td></tr></table></figure></li><li><p><strong>百度 2</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gimg2.baidu.com/image_search/&amp;app=2020&amp;src=图片地址（图片地址要去掉 https://）</span><br></pre></td></tr></table></figure></li></ol><p>使用百度的速度相对快一些</p><h2 id="Wordpress批量替换"><a href="#Wordpress批量替换" class="headerlink" title="Wordpress批量替换"></a>Wordpress批量替换</h2><p>如果你的<code>wordpress</code>博客大量的图片都在新浪中, 那么可以通过以下两种方式进行批量替换:</p><ol><li><p><strong>静态替换 修改数据库</strong></p><p>修改数据库之前记得先备份数据库 以防止误操作无法还原</p><p><code>sql</code>命令如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> wp_posts <span class="keyword">SET</span> post_content = <span class="keyword">REPLACE</span>( post_content,  <span class="string">'https://tvax1.sinaimg.cn/'</span>,  <span class="string">'https://image.baidu.com/search/down?url=https://tvax1.sinaimg.cn/'</span> )</span><br></pre></td></tr></table></figure></li><li><p><strong>动态替换 修改主题代码</strong></p><p>进入<code>wordpress</code>主题编辑器:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240417185327043.png" alt="image-20240417185327043"></p><p>将以下代码添加到主题页脚<code>foot.php</code>中:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"> <span class="keyword">let</span> context = <span class="built_in">Array</span>.prototype.map.call(<span class="built_in">document</span>.images, (event) =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">           event.src = event.src.replace(<span class="string">"tvax1.sinaimg.cn/"</span>, <span class="string">"image.baidu.com/search/down?url=https://tvax1.sinaimg.cn/"</span>)</span></span><br><span class="line">          </span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240417185632599.png" alt="image-20240417185632599"></p></li></ol><p>推荐使用动态的方式自动批量替换, 能将降低数据库操作风险, 又方便后期再次更改, 动态的方式唯一不足之处就是图片加载有延迟</p><p>如果你追求加载速度和用户体验, 那么建议采用静态替换的方式</p><h2 id="图片批量备份"><a href="#图片批量备份" class="headerlink" title="图片批量备份"></a>图片批量备份</h2><p>上面这种临时替换方式始终不是长久之计, 我们需要尽快对图片进行备份和迁移  防止新浪图床哪天不再提供服务了</p><p>我个人的做法是通过<code>python</code>批量将图片下载到本地 然后进行图床更换, 核心代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="comment"># 当前文件路径</span></span><br><span class="line">current_path = os.path.abspath(__file__)</span><br><span class="line"><span class="comment"># 父目录</span></span><br><span class="line">father_path = os.path.abspath(os.path.dirname(current_path) + os.path.sep + <span class="string">"."</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#----- 用于图片下载------</span></span><br><span class="line">opener=urllib.request.build_opener()</span><br><span class="line">opener.addheaders=[(<span class="string">'User-Agent'</span>,<span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1941.0 Safari/537.36'</span>),(<span class="string">'Accept'</span>, <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>),(</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>, <span class="string">'gzip,deflate,sdch'</span>),</span><br><span class="line">        (<span class="string">'Accept-Language'</span>, <span class="string">'zh-CN,zh;q=0.8'</span>)]</span><br><span class="line">req=urllib.request</span><br><span class="line">req.install_opener(opener)</span><br><span class="line"><span class="comment">#----- 用于图片下载------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 图片输出目录</span></span><br><span class="line">pic_dir = <span class="string">'img'</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(pic_dir):</span><br><span class="line">    os.makedirs(pic_dir)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#将网络图片下载到本地</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_img</span><span class="params">(url,dir,image_name)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        req.urlretrieve(url, dir+image_name)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#采用原图片地址的名称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pic_name_by_url</span><span class="params">(url)</span>:</span></span><br><span class="line">     <span class="comment"># 我只需要末尾xxx部分 使用正则替换</span></span><br><span class="line">    image_name = url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> image_name</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img2url</span><span class="params">(url)</span>:</span></span><br><span class="line">     fir=<span class="string">"https://cdn.jsdelivr.net/gh/xxx/xxx/img/"</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span> <span class="string">"sinaimg.cn"</span> <span class="keyword">in</span> url:</span><br><span class="line">        url=<span class="string">"https://image.baidu.com/search/down?url="</span>+url</span><br><span class="line">    new_name=get_pic_name_by_url(url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        download_img(url,<span class="string">"&#123;parent&#125;/img/"</span>.format(parent=father_path),new_name)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">f"图片下载异常: <span class="subst">&#123;e&#125;</span>"</span>)</span><br><span class="line">        <span class="keyword">return</span> url</span><br><span class="line">    <span class="keyword">return</span> fir+new_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历每篇文章</span></span><br><span class="line"><span class="keyword">for</span> idx, post <span class="keyword">in</span> enumerate(posts):</span><br><span class="line">    content, lastmodifytime = post</span><br><span class="line"></span><br><span class="line">    d=pq(content)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> d(<span class="string">"img"</span>).items():</span><br><span class="line">        old_url=item.attr(<span class="string">"src"</span>)</span><br><span class="line">        <span class="comment"># 将图片下载到本地</span></span><br><span class="line">        new_url=img2url(old_url)</span><br><span class="line">        print(new_url)</span><br><span class="line">        <span class="comment">#替换图片地址</span></span><br><span class="line">        item.attr(<span class="string">"src"</span>,new_url)</span><br></pre></td></tr></table></figure><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;很多早期的站长基本使用新浪的图床, 新浪图床免费又稳定, 受到很多人的青睐, 我本人不怎么用新浪图床, 但是手上有一批素材, 引用的是新浪服
      
    
    </summary>
    
    
    
      <category term="图床" scheme="https://code.newban.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>内容多平台分发工具汇总</title>
    <link href="https://code.newban.cn/467.html"/>
    <id>https://code.newban.cn/467.html</id>
    <published>2024-04-16T07:14:19.000Z</published>
    <updated>2024-04-19T13:19:18.701Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>文章撰写一次 到处分发 无需繁琐的复制粘贴 节省大量的重复机械劳动力 追求极致的自动化 一键分发工具 无疑是解决了很多创作者的痛点</p><p>接下来给大家汇总几个可一键分发的网站</p><h2 id="一键分发平台"><a href="#一键分发平台" class="headerlink" title="一键分发平台"></a>一键分发平台</h2><ul><li><p><a href="https://mdnice.com/?platform=2" target="_blank" rel="noopener">mdnice</a></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240418194825613.png" alt="image-20240418194825613"></p></li><li><p><a href="https://openwrite.cn/" target="_blank" rel="noopener">openwrite</a></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240417225346730.png" alt="image-20240417225346730"></p></li></ul><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;文章撰写一次 到处分发 无需繁琐的复制粘贴 节省大量的重复机械劳动力 追求极致的自动化 一键分发工具 无疑是解决了很多创作者的痛点&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://code.newban.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用python3将wordpress博客数据迁移到hexo</title>
    <link href="https://code.newban.cn/465.html"/>
    <id>https://code.newban.cn/465.html</id>
    <published>2024-04-16T04:14:19.000Z</published>
    <updated>2024-04-18T11:46:44.891Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为了追求网站访问的稳定性 准备将<code>wordpress</code>博客迁移到<code>hexo</code>上 考虑到数据量比较多 我直接将数据库导出成压缩包 然后下载到本地电脑 然后使用<code>python</code>批量将里面的文章转成<code>markdown</code>格式的文档</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><p>导出数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u用户名 -p密码 数据库名 | gzip &gt; 数据库名.sql.gz</span><br></pre></td></tr></table></figure></li><li><p>将导出的数据库文件下载到本地 然后双击解压该数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r root@服务器IP:刚导出的数据库所在路径 本地目录</span><br></pre></td></tr></table></figure></li><li><p>数据库导入进本地<code>mysql</code>中 方便<code>python</code>连接</p><p>首先创建新数据库:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;create database 数据库名;</span><br></pre></td></tr></table></figure><p>然后将<code>sql</code>文件导入到该库中:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u用户名 -p密码 数据库名 &lt; 数据库名.sql</span><br></pre></td></tr></table></figure></li></ol><h2 id="Python批量转换"><a href="#Python批量转换" class="headerlink" title="Python批量转换"></a>Python批量转换</h2><p><code>python</code>代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##########################</span></span><br><span class="line"><span class="comment">#  </span></span><br><span class="line"><span class="comment">#  链接本地mysql数据库将wordpress中的文章提取出来并转成hexo博客格式</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">##########################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> markdownify <span class="keyword">import</span> markdownify <span class="keyword">as</span> md</span><br><span class="line"><span class="keyword">import</span> pymysql.cursors</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.setrecursionlimit(<span class="number">1000000</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接数据库</span></span><br><span class="line">conn = pymysql.Connect(</span><br><span class="line">    host=<span class="string">'127.0.0.1'</span>,</span><br><span class="line">    port=<span class="number">3306</span>,</span><br><span class="line">    user=<span class="string">'数据库用户名'</span>,</span><br><span class="line">    passwd=<span class="string">'数据库密码'</span>,</span><br><span class="line">    db=<span class="string">'wordpress_it'</span>,</span><br><span class="line">    charset=<span class="string">'utf8mb4'</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># 获取游标</span></span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有文章</span></span><br><span class="line">cursor.execute(<span class="string">"SELECT post_title, post_content, post_date FROM wp_posts WHERE post_type='post'"</span>)</span><br><span class="line">posts = cursor.fetchall()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保输出目录存在</span></span><br><span class="line">output_dir = <span class="string">'hexo_posts'</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_dir):</span><br><span class="line">    os.makedirs(output_dir)</span><br><span class="line"></span><br><span class="line">tags=[<span class="string">"Android"</span>,<span class="string">"IOS"</span>,<span class="string">"服务器"</span>,<span class="string">"Docker"</span>,<span class="string">"Mysql"</span>,<span class="string">"Flutter"</span>,<span class="string">"Java"</span>,<span class="string">"Hexo"</span>]</span><br><span class="line">postTag=<span class="string">"技术文章"</span> <span class="comment">#默认分类为</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历每篇文章</span></span><br><span class="line"><span class="keyword">for</span> idx, post <span class="keyword">in</span> enumerate(posts):</span><br><span class="line">    title, content,date = post</span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags:</span><br><span class="line">        <span class="keyword">if</span> tag <span class="keyword">in</span> title:</span><br><span class="line">            postTag=tag</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将HTML内容转换为Markdown</span></span><br><span class="line">    markdown_content = md(content)</span><br><span class="line">    <span class="comment"># 写入Hexo格式的Markdown文件</span></span><br><span class="line">    <span class="keyword">with</span> open(os.path.join(output_dir, <span class="string">f"<span class="subst">&#123;idx+<span class="number">1</span>&#125;</span>.md"</span>), <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="string">"---\n"</span>)</span><br><span class="line">        f.write(<span class="string">f"title: <span class="subst">&#123;title&#125;</span>\n"</span>) <span class="comment"># 如果要嵌入变量 需要加f</span></span><br><span class="line">        f.write(<span class="string">f"date: <span class="subst">&#123;date&#125;</span>\n"</span>)  <span class="comment"># 请将日期替换为实际发布日期</span></span><br><span class="line">        f.write(<span class="string">f"tags: <span class="subst">&#123;postTag&#125;</span>\n"</span>)</span><br><span class="line">        f.write(<span class="string">"---\n"</span>)</span><br><span class="line">        f.write(<span class="string">"\n"</span>)</span><br><span class="line">        f.write(markdown_content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭游标和连接</span></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>想要正常运行该代码 需要安装<code>pymysql</code>和<code>markdownify</code>两个库:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install markdownify</span><br><span class="line">pip3 install pymysql</span><br></pre></td></tr></table></figure><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;为了追求网站访问的稳定性 准备将&lt;code&gt;wordpress&lt;/code&gt;博客迁移到&lt;code&gt;hexo&lt;/code&gt;上 考虑到数据量比较
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://code.newban.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>编写一个hexo插件 实现给文章中的外部超链接增加一个中间跳转询问页面</title>
    <link href="https://code.newban.cn/464.html"/>
    <id>https://code.newban.cn/464.html</id>
    <published>2024-04-16T02:14:19.000Z</published>
    <updated>2024-04-19T05:51:51.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>我本来想让AI给我写一个<code>hexo</code>插件 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">请写一个hexo插件 要求功能如下:</span><br><span class="line"></span><br><span class="line">1. 在执行hexo -g指令时自动将文章中的非本站合法超链接提取替换出来 为每个合法的链接生成独立的跳转页面  独立页面的地址和链接形成固定的对应关系  不会因为新增文章而发生对应链接改变的问题</span><br><span class="line">2. 当用户浏览博客时点击超链接会跳转到一个单独的网页 在这个网页中显示文字和该链接地址并询问用户是否需要跳转到该链接  当用户点击文字下方的跳转按钮则自动跳转到该链接  </span><br><span class="line">3. 文章中的链接应该替换成对应已经生成的跳转页面的链接 </span><br><span class="line">4. 要求能在`config`文件中自定义需要进行排除的域名 不对排除的域名下的所有链接进行跳转页面的生成 保留原始的直接跳转即可 </span><br><span class="line">5. 在`config`文件中增加插件的开启开关 </span><br><span class="line">6. 需要过滤掉非合法的超链接 非合法的链接不做处理</span><br><span class="line">7. 跳转页面的UI希望能美观一些 内容居中显示 </span><br><span class="line"></span><br><span class="line">请给出插件的完整代码</span><br></pre></td></tr></table></figure><p>然后<code>AI</code>给我的答案是:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">以下是一个满足您需求的Hexo插件的完整代码：</span><br><span class="line"></span><br><span class="line">const fs = require(&apos;fs&apos;);</span><br><span class="line">const path = require(&apos;path&apos;);</span><br><span class="line">const &#123; promisify &#125; = require(&apos;util&apos;);</span><br><span class="line">const &#123; URL &#125; = require(&apos;url&apos;);</span><br><span class="line"></span><br><span class="line">const readFile = promisify(fs.readFile);</span><br><span class="line">const writeFile = promisify(fs.writeFile);</span><br><span class="line"></span><br><span class="line">const config = hexo.config.external_link_redirect || &#123;&#125;;</span><br><span class="line">const excludedDomains = config.excluded_domains || [];</span><br><span class="line">const redirectPageDir = path.join(hexo.public_dir, &apos;redirect_pages&apos;);</span><br><span class="line">const redirectPageTemplate = `</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;title&gt;Redirect Page&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">      font-family: Arial, sans-serif;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">    .container &#123;</span><br><span class="line">      margin-top: 100px;</span><br><span class="line">    &#125;</span><br><span class="line">    .link &#123;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      font-weight: bold;</span><br><span class="line">    &#125;</span><br><span class="line">    .button &#123;</span><br><span class="line">      padding: 10px 20px;</span><br><span class="line">      background-color: #007bff;</span><br><span class="line">      color: #fff;</span><br><span class="line">      border: none;</span><br><span class="line">      border-radius: 5px;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      text-decoration: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;p class=&quot;link&quot;&gt;%LINK%&lt;/p&gt;</span><br><span class="line">    &lt;button class=&quot;button&quot; onclick=&quot;redirectToLink()&quot;&gt;Go to Link&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    function redirectToLink() &#123;</span><br><span class="line">      window.location.href = &apos;%URL%&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">`;</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(&apos;before_generate&apos;, async function () &#123;</span><br><span class="line">  if (!config.enable) &#123;</span><br><span class="line">    console.log(&apos;External link redirect plugin is disabled.&apos;);</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  await createRedirectPages();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">async function createRedirectPages() &#123;</span><br><span class="line">  const posts = hexo.locals.get(&apos;posts&apos;);</span><br><span class="line">  if (!posts || !posts.length) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  for (const post of posts.data) &#123;</span><br><span class="line">    const content = post.content;</span><br><span class="line">    const updatedContent = await processContent(content);</span><br><span class="line">    post.content = updatedContent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function processContent(content) &#123;</span><br><span class="line">  const updatedContent = content.replace(/&lt;a href=&quot;([^&quot;]+)&quot;[^&gt;]*&gt;(.*?)&lt;\/a&gt;/gi, async (match, url, text) =&gt; &#123;</span><br><span class="line">    if (!isLinkValid(url)) &#123;</span><br><span class="line">      return match; // Skip invalid links</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const redirectPagePath = await generateRedirectPage(url);</span><br><span class="line">    const redirectLink = `&lt;a href=&quot;$&#123;redirectPagePath&#125;&quot;&gt;$&#123;text&#125;&lt;/a&gt;`;</span><br><span class="line">    return redirectLink;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  return updatedContent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function isLinkValid(url) &#123;</span><br><span class="line">  if (!url || typeof url !== &apos;string&apos;) &#123;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const parsedUrl = new URL(url);</span><br><span class="line">  const domain = parsedUrl.hostname.replace(&apos;www.&apos;, &apos;&apos;);</span><br><span class="line">  return !excludedDomains.includes(domain);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function generateRedirectPage(url) &#123;</span><br><span class="line">  const redirectUrl = new URL(url);</span><br><span class="line">  const domain = redirectUrl.hostname.replace(&apos;www.&apos;, &apos;&apos;);</span><br><span class="line">  const redirectPagePath = path.join(redirectPageDir, `$&#123;domain&#125;_$&#123;Date.now()&#125;.html`);</span><br><span class="line">  const pageContent = redirectPageTemplate.replace(&apos;%LINK%&apos;, url).replace(&apos;%URL%&apos;, url);</span><br><span class="line"></span><br><span class="line">  await writeFile(redirectPagePath, pageContent);</span><br><span class="line">  return redirectPagePath.replace(hexo.public_dir, &apos;&apos;);</span><br><span class="line">&#125;</span><br><span class="line">在这个插件中，我们做了以下几件事情：</span><br><span class="line"></span><br><span class="line">在执行hexo -g指令之前，通过before_generate过滤器来自动生成跳转页面。</span><br><span class="line">通过正则表达式遍历文章内容，找到所有超链接，并检查链接是否有效。</span><br><span class="line">对于有效的链接，创建一个跳转页面，并将原始链接替换为跳转页面的链接。</span><br><span class="line">生成的跳转页面是一个HTML文件，包含跳转链接和一个按钮，点击按钮可以跳转到原始链接。</span><br><span class="line">用户可以在Hexo配置文件中设置插件的开启状态、需要排除的域名以及跳转页面模板。</span><br><span class="line">最终生成的跳转页面保存在public/redirect_pages目录下，每个页面都有固定的对应关系，不会因为新增文章而改变链接。</span><br></pre></td></tr></table></figure><p>看了一下AI给我写的代码, 可以说是秀的我头疼, 代码可读性实在太差了, 难道是我问的方式不对?🤔</p><p>由于<code>ChatGPT</code>免费次数有限 我也懒得去搜寻免费的<code>AIChat</code>,  干脆就自己手动写一个吧</p><p>最后调试完成后的插件代码如下:</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">'cheerio'</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">'crypto'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; log &#125; = <span class="built_in">require</span>(<span class="string">'console'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> DEFAULT_EXCLUDE_DOMAINS = [<span class="string">'example.com'</span>]; <span class="comment">// 默认排除的域名列表</span></span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">'before_generate'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> config = hexo.config.external_links || &#123;&#125;;</span><br><span class="line">    <span class="keyword">const</span> excludeDomains = config.exclude_domains || DEFAULT_EXCLUDE_DOMAINS;</span><br><span class="line">    <span class="keyword">if</span> (!config.enable) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'关闭external_links插件'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    hexo.extend.generator.register(<span class="string">'external_links'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">locals</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> posts = locals.posts;</span><br><span class="line">        <span class="keyword">const</span> author = hexo.config.author;</span><br><span class="line">        <span class="keyword">const</span> outputDir = hexo.config.external_links_output || <span class="string">'external_links'</span>;</span><br><span class="line">        <span class="keyword">const</span> linkMap = <span class="keyword">new</span> <span class="built_in">Map</span>(); <span class="comment">// 存储链接和其对应的哈希值的映射</span></span><br><span class="line"></span><br><span class="line">        posts.forEach(<span class="function"><span class="params">post</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> $ = cheerio.load(post.content);</span><br><span class="line">            $(<span class="string">'a'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">const</span> href = filterUrl($(<span class="keyword">this</span>).attr(<span class="string">'href'</span>));</span><br><span class="line">                <span class="keyword">const</span> hostname = getHostname(href);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (hostname!=<span class="string">""</span>&amp;&amp;!excludeDomains.includes(hostname)) &#123;</span><br><span class="line">                    <span class="keyword">const</span> hash = generateHash(href);</span><br><span class="line">                    linkMap.set(href, hash); <span class="comment">// 存储链接和哈希值的映射关系</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//替换文章中的原始链接</span></span><br><span class="line">                    <span class="keyword">const</span> newHref = <span class="string">`/<span class="subst">$&#123;outputDir&#125;</span>/<span class="subst">$&#123;hash&#125;</span>.html`</span>;</span><br><span class="line">                    $(<span class="keyword">this</span>).attr(<span class="string">'href'</span>, newHref);</span><br><span class="line">                    $(<span class="keyword">this</span>).attr(<span class="string">'target'</span>, <span class="string">"blank"</span>);<span class="comment">//在新标签页中打开超链接</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            post.content = $.html();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> outputPath = path.join(hexo.public_dir, outputDir);</span><br><span class="line">        <span class="keyword">if</span> (!fs.existsSync(outputPath)) &#123;</span><br><span class="line">            fs.mkdirSync(outputPath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成每个链接对应的页面</span></span><br><span class="line">        linkMap.forEach(<span class="function">(<span class="params">hash, href</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> htmlContent = generateLinkPage(href, hash,author);</span><br><span class="line">            <span class="keyword">const</span> outputFile = path.join(outputPath, <span class="string">`<span class="subst">$&#123;hash&#125;</span>.html`</span>);</span><br><span class="line">            fs.writeFileSync(outputFile, htmlContent);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateLinkPage</span>(<span class="params">href, hash,author</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> html = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">        &lt;html lang="en"&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">            &lt;meta charset="UTF-8"&gt;</span></span><br><span class="line"><span class="string">            &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span></span><br><span class="line"><span class="string">            &lt;title&gt;访问外部网站-&#123;author&#125;&lt;/title&gt;</span></span><br><span class="line"><span class="string">            &lt;style&gt;</span></span><br><span class="line"><span class="string">                body &#123;</span></span><br><span class="line"><span class="string">                    margin: 20px;</span></span><br><span class="line"><span class="string">                    padding-top: 100px;</span></span><br><span class="line"><span class="string">                    color: #222;</span></span><br><span class="line"><span class="string">                    font-size: 13px;</span></span><br><span class="line"><span class="string">                    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="string">                    line-height: 1.5;</span></span><br><span class="line"><span class="string">                    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .wrapper &#123;</span></span><br><span class="line"><span class="string">                    margin: auto;</span></span><br><span class="line"><span class="string">                    padding-left: 30px;</span></span><br><span class="line"><span class="string">                    padding-right: 30px;</span></span><br><span class="line"><span class="string">                    max-width: 540px;</span></span><br><span class="line"><span class="string">   padding-top: 25px;</span></span><br><span class="line"><span class="string">                    padding-bottom: 25px;</span></span><br><span class="line"><span class="string">                    background-color: #f7f7f7;</span></span><br><span class="line"><span class="string">                    border: 1px solid #babbbc;</span></span><br><span class="line"><span class="string">                    border-radius: 5px;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">             </span></span><br><span class="line"><span class="string">              </span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">                .button &#123;</span></span><br><span class="line"><span class="string">                    padding: 0;</span></span><br><span class="line"><span class="string">                    font-family: inherit;</span></span><br><span class="line"><span class="string">                    background: none;</span></span><br><span class="line"><span class="string">                    border: none;</span></span><br><span class="line"><span class="string">                    outline: none;</span></span><br><span class="line"><span class="string">                    cursor: pointer;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .button:hover &#123;</span></span><br><span class="line"><span class="string">                    background-color: #0070cd;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                a&#123;</span></span><br><span class="line"><span class="string">                    text-decoration: none</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">                .button:active &#123;</span></span><br><span class="line"><span class="string">                    background-color: #0077d9;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">          </span></span><br><span class="line"><span class="string">                .link &#123;</span></span><br><span class="line"><span class="string">                    margin-bottom: 10px;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">              </span></span><br><span class="line"><span class="string">                .button &#123;</span></span><br><span class="line"><span class="string">                    display: inline-block;</span></span><br><span class="line"><span class="string">                    padding: 10px 16px;</span></span><br><span class="line"><span class="string">                    color: #fff;</span></span><br><span class="line"><span class="string">                    font-size: 14px;</span></span><br><span class="line"><span class="string">                    line-height: 1;</span></span><br><span class="line"><span class="string">                    background-color: #0077d9;</span></span><br><span class="line"><span class="string">                    border-radius: 3px;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                .actions &#123;</span></span><br><span class="line"><span class="string">                    margin-top: 15px;</span></span><br><span class="line"><span class="string">                    padding-top: 30px;</span></span><br><span class="line"><span class="string">                    text-align: right;</span></span><br><span class="line"><span class="string">                    border-top: 1px solid #d8d8d8;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">            &lt;div class="wrapper"&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="content"&gt;</span></span><br><span class="line"><span class="string">                    &lt;h1&gt;即将离开<span class="subst">$&#123;author&#125;</span>&lt;/h1&gt;</span></span><br><span class="line"><span class="string">                    &lt;p class="info"&gt;您即将离开<span class="subst">$&#123;author&#125;</span>，前往外部网站。&lt;/p&gt;</span></span><br><span class="line"><span class="string">                    &lt;p class="link"&gt;<span class="subst">$&#123;href&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="actions"&gt;</span></span><br><span class="line"><span class="string">                    &lt;a class="button" href="<span class="subst">$&#123;href&#125;</span>" one-link-mark="yes"&gt;继续访问&lt;/a&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    <span class="keyword">return</span> html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getHostname</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> URL(url).hostname;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filterUrl</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> urlRegex = <span class="regexp">/http[s]?:\/\/[\u4e00-\u9fa5\w.-\/:]+[\u4e00-\u9fa5\w.?&amp;\/=-]+/g</span>;</span><br><span class="line">    <span class="keyword">const</span> match = urlRegex.exec(url);</span><br><span class="line">    <span class="keyword">return</span> match ? match[<span class="number">0</span>] : <span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateHash</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> crypto.createHash(<span class="string">'md5'</span>).update(data).digest(<span class="string">'hex'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>使用方法:</strong></p><p>在<code>script</code>目录下新建一个<code>js</code>文件,  注意名称不要使用<code>index.js</code>, 将上面代码粘贴过去, 然后在<code>config</code>配置文件中指定输出的目录以及需要过滤的域名 如下:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要排除的域名 以及是否开启该插件</span></span><br><span class="line"><span class="attr">external_links:</span></span><br><span class="line"><span class="attr">  exclude_domains:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'acg.newban.cn'</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'newban.cn'</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'code.newban.cn'</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">'audio.newban.cn'</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#输出目录</span></span><br><span class="line"><span class="attr">external_links_output:</span> <span class="string">external_links</span></span><br></pre></td></tr></table></figure><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>模仿的知乎效果:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240416141911249.png" alt="image-20240416141911249"></p><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;我本来想让AI给我写一个&lt;code&gt;hexo&lt;/code&gt;插件 如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://code.newban.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>数据库常用操作指令</title>
    <link href="https://code.newban.cn/463.html"/>
    <id>https://code.newban.cn/463.html</id>
    <published>2024-04-15T02:14:19.000Z</published>
    <updated>2024-04-16T08:23:10.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>数据库操作指令<em></em>涵盖了创建、查询、修改和删除数据库及表的过程，以及如何在这些数据库和表中进行数据操作。以下是一些常用的数据库操作指令：</p><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span><br></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名;</span><br></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 (列名 数据类型);</span><br></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="显示所有数据库"><a href="#显示所有数据库" class="headerlink" title="显示所有数据库"></a>显示所有数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure><h3 id="进入数据库"><a href="#进入数据库" class="headerlink" title="进入数据库"></a>进入数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> 数据库名;</span><br></pre></td></tr></table></figure><h3 id="显示所有表"><a href="#显示所有表" class="headerlink" title="显示所有表"></a>显示所有表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>(值<span class="number">1</span>,值<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段=新值 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 <span class="keyword">rename</span> <span class="keyword">to</span> 新表名;</span><br></pre></td></tr></table></figure><h3 id="查看表所有的字段"><a href="#查看表所有的字段" class="headerlink" title="查看表所有的字段"></a>查看表所有的字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">describe</span> 表名</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><h3 id="添加字段"><a href="#添加字段" class="headerlink" title="添加字段"></a>添加字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 字段名 数据类型;</span><br></pre></td></tr></table></figure><h3 id="修改字段"><a href="#修改字段" class="headerlink" title="修改字段"></a>修改字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">modify</span> 字段名 新数据类型;</span><br></pre></td></tr></table></figure><h3 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a>删除字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 字段名;</span><br></pre></td></tr></table></figure><p>这些指令提供了对数据库和表的基本操作，包括创建、修改、删除和查询数据 根据具体需求，可以组合使用这些指令来完成更复杂的数据库管理任务</p><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;数据库操作指令&lt;em&gt;&lt;/em&gt;涵盖了创建、查询、修改和删除数据库及表的过程，以及如何在这些数据库和表中进行数据操作。以下是一些常用的数据
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://code.newban.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用ffmpeg将本地的flv视频压制转换成小体积的MP4</title>
    <link href="https://code.newban.cn/461.html"/>
    <id>https://code.newban.cn/461.html</id>
    <published>2024-04-13T02:14:19.000Z</published>
    <updated>2024-04-14T07:41:02.534Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于<code>ffmpeg</code>的下载, 可查阅上一篇文章《<a href="https://code.newban.cn/460.html">Mac平台如何下载ffmpeg并对m3u8视频进行下载转换成MP4</a>》</p><p>本文将给大家介绍如何使用<code>ffmpeg</code>将本地的<code>flv</code>视频压制转换成小体积的<code>MP4</code></p><h2 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h2><p>如果只是单纯的进行格式转换 可以直接使用以下指令来实现:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.flv -vcodec copy -acodec copy output.mp4</span><br></pre></td></tr></table></figure><p>这种方式通常体积不会有太大的改变 </p><h2 id="转换格式并压缩视频体积"><a href="#转换格式并压缩视频体积" class="headerlink" title="转换格式并压缩视频体积"></a>转换格式并压缩视频体积</h2><p>如果需要将视频进行压缩 以减少空间的占用 可以参考以下指令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.flv -c:v libx264 -crf 26 -c:a aac -strict experimental -b:a 128k output.mp4</span><br></pre></td></tr></table></figure><p><strong>解释各选项含义：</strong></p><ul><li><code>-i input.flv</code>：指定输入文件名为<code>input.flv</code>。</li><li><code>-c:v libx264</code>：使用<code>H.264</code>编码来压缩视频。</li><li><code>-crf 28</code>：设置<code>CRF</code>（常量速率因子）的值为23。低值表示更好的质量，但文件会更大；高值会降低质量。范围是从0（无损）到51（最糟），通常使用18到28, <code>27</code>通常是用于<code>MP4</code>格式的视频质量很好的平衡</li><li><code>-c:a aac</code>：使用<code>AAC</code>编码来压缩音频。</li><li><code>-strict experimental</code>：允许使用实验性的编码器。</li><li><code>-b:a 128k</code>：设置音频比特率为128k。根据需求可以调整大小。</li></ul><p>我们需要找到一个合适的参数平衡点 确保视频画面的质量的同时尽可能地压缩视频体积</p><p>如果我们想要快速压制 减少等待时间 还可以指定编码器预设 如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.flv -c:v libx264 -preset veryfast -crf 24 -c:a aac -b:a 128k output.mp4</span><br></pre></td></tr></table></figure><p><strong>解释选项含义：</strong></p><ul><li><code>-preset veryfast</code>：指定编码器预设，<code>veryfast</code>提供快速但质量较低的编码, 除此之外 还有<code>fast</code>、<code>HQ</code>、 <code>SuperHQ</code>等预设。</li></ul><h2 id="ffmpeg-截取视频"><a href="#ffmpeg-截取视频" class="headerlink" title="ffmpeg 截取视频"></a>ffmpeg 截取视频</h2><p>要使用<code>FFmpeg</code>截取视频 可以使用以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -ss 00:00:10 -t 00:00:30 -c copy output.mp4</span><br></pre></td></tr></table></figure><p><strong>解释各选项含义：</strong></p><ul><li><code>-i input.mp4</code> 指定输入视频文件。</li><li><code>-ss 00:00:10</code> 表示从视频的指定时间点开始截取，这里是从10秒处开始。</li><li><code>-t 00:00:30</code> 表示截取的时长，这里是30秒。</li><li><code>-c copy</code> 表示复制编码器，即不重新编码，直接复制视频流和音频流。</li><li><code>output.mp4</code> 是输出文件的名称。</li></ul><p>请根据实际需求调整时间参数。如果需要不同的起始时间或时长，只需修改<code>-ss</code>和<code>-t</code>参数即可。如果需要对视频进行重编码，可以去掉<code>-c copy</code>参数或指定其他编码器选项。</p><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;关于&lt;code&gt;ffmpeg&lt;/code&gt;的下载, 可查阅上一篇文章《&lt;a href=&quot;https://code.newban.cn/460
      
    
    </summary>
    
    
    
      <category term="m3u8" scheme="https://code.newban.cn/tags/m3u8/"/>
    
  </entry>
  
  <entry>
    <title>Mac平台如何下载ffmpeg并对m3u8视频进行下载转换成MP4</title>
    <link href="https://code.newban.cn/460.html"/>
    <id>https://code.newban.cn/460.html</id>
    <published>2024-04-13T02:14:19.000Z</published>
    <updated>2024-04-13T10:14:23.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ffmpeg安装"><a href="#ffmpeg安装" class="headerlink" title="ffmpeg安装"></a>ffmpeg安装</h2><p>在Mac平台上 本人多次使用<code>brew</code>工具进行<code>ffmpeg</code>安装都未成功</p><p>于是决定直接去<code>ffmpeg</code>官网下载执行包</p><p><a href="http://www.ffmpeg.org/download.html" target="_blank" rel="noopener">点击进入官网</a></p><p>由于是国外的网站 下载速度会相对较慢 文末已经给大家准备了网盘下载链接</p><p>这里我们选择<code>Mac</code> :</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240413173518406.png" alt="image-20240413173518406"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240413173539785.png" alt="image-20240413173539785"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240413173602675.png" alt="image-20240413173602675"></p><p>将执行压缩包解压后得到一个独立的<code>ffmpeg</code>执行文件:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240413173929604.png" alt="image-20240413173929604"></p><p>为了方便我们接下来的使用 需要对其进行环境变量的配置:</p><ol><li><p>在终端中输入以下命令 打开环境变量配置文件：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure></li><li><p>在该文件中加入以下内容</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/path/to/ffmpeg:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure><p> 注意: 这里需要将 <code>/path/to/ffmpeg</code> 替换为你的<code>ffmpeg</code>所在路径</p></li></ol><ol start="3"><li><p>使用<code>source</code>命令使新的环境变量生效</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure></li><li><p>验证是否配置成功</p><p>在任意一个非ffmpeg所在目录执行以下命令, 如果正常打印内容 则代表配置成功:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -version</span><br></pre></td></tr></table></figure></li></ol><h2 id="下载m3u8视频并转换成mp4"><a href="#下载m3u8视频并转换成mp4" class="headerlink" title="下载m3u8视频并转换成mp4"></a>下载m3u8视频并转换成mp4</h2><p><code>ffmpeg</code>支持直接访问<code>m3u8</code>链接并将其内容转成mp4格式, 执行命令如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i &#123;m3u8链接&#125; -c copy -bsf:a aac_adtstoasc &#123;文件名&#125;.mp4</span><br></pre></td></tr></table></figure><p>同样的该<code>ffmpeg</code>指令也适用于直播流的下载和转换 比如<code>http://xxx.flv</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i &#123;直播链接&#125; -c copy -bsf:a aac_adtstoasc &#123;文件名&#125;.mp4</span><br></pre></td></tr></table></figure><h2 id="ffmpeg国内下载"><a href="#ffmpeg国内下载" class="headerlink" title="ffmpeg国内下载"></a>ffmpeg国内下载</h2><p><a href="https://url97.ctfile.com/d/21042697-59243365-19e46d?p=312306" target="_blank" rel="noopener">网盘下载</a> (访问密码: 312306)</p><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ffmpeg安装&quot;&gt;&lt;a href=&quot;#ffmpeg安装&quot; class=&quot;headerlink&quot; title=&quot;ffmpeg安装&quot;&gt;&lt;/a&gt;ffmpeg安装&lt;/h2&gt;&lt;p&gt;在Mac平台上 本人多次使用&lt;code&gt;brew&lt;/code&gt;工具进行&lt;code&gt;ffmpe
      
    
    </summary>
    
    
    
      <category term="m3u8" scheme="https://code.newban.cn/tags/m3u8/"/>
    
  </entry>
  
  <entry>
    <title>如何开发hexo插件</title>
    <link href="https://code.newban.cn/462.html"/>
    <id>https://code.newban.cn/462.html</id>
    <published>2024-04-13T02:14:19.000Z</published>
    <updated>2024-04-15T04:28:27.682Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：</p><h3 id="脚本（Scripts）"><a href="#脚本（Scripts）" class="headerlink" title="脚本（Scripts）"></a>脚本（Scripts）</h3><p>如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 <code>scripts</code> 文件夹，在启动时就会自动加载。</p><h3 id="插件（Packages）"><a href="#插件（Packages）" class="headerlink" title="插件（Packages）"></a>插件（Packages）</h3><p>如果您的代码较复杂，或是您想要发布到 NPM 上，建议您编写插件。首先，在 <code>node_modules</code> 文件夹中建立文件夹，文件夹名称开头必须为 <code>hexo-</code>，如此一来 Hexo 才会在启动时加载；否则 Hexo 将会忽略它。</p><p>文件夹内至少要包含 2 个文件：一个是主程序，另一个是 <code>package.json</code>，描述插件的用途和所依赖的插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── index.js</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure><p><code>package.json</code> 中至少要包含 <code>name</code>, <code>version</code>, <code>main</code> 属性，例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">package.json&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"hexo-my-plugin"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"0.0.1"</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"index"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>您可以使用 Hexo 提供的官方工具插件来加速开发：</p><ul><li><a href="https://github.com/hexojs/hexo-fs" target="_blank" rel="noopener">hexo-fs</a>：文件 IO</li><li><a href="https://github.com/hexojs/hexo-util" target="_blank" rel="noopener">hexo-util</a>：工具程式</li><li><a href="https://github.com/hexojs/hexo-i18n" target="_blank" rel="noopener">hexo-i18n</a>：本地化（i18n）</li><li><a href="https://github.com/hexojs/hexo-pagination" target="_blank" rel="noopener">hexo-pagination</a>：生成分页数据</li></ul><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>当您完成插件后，可以考虑将它发布到 <a href="https://hexo.io/plugins" target="_blank" rel="noopener">插件列表</a>，让更多人能够使用您的插件。发布插件的步骤和 <a href="https://hexo.io/zh-cn/docs/contributing.html#更新文档" target="_blank" rel="noopener">更新文档</a> 非常类似。</p><ol><li><p>Fork <a href="https://github.com/hexojs/site" target="_blank" rel="noopener">hexojs/site</a></p></li><li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/&lt;username&gt;/site.git</span><br><span class="line">$ <span class="built_in">cd</span> site</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>在 <code>source/_data/plugins/</code> 中创建一个新的 yaml 文件，使用您的插件名称作为文件名。</p></li><li><p>编辑 <code>source/_data/plugins/&lt;your-plugin-name&gt;.yml</code> 并添加您的插件。例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">description:</span> <span class="string">Server</span> <span class="string">module</span> <span class="string">for</span> <span class="string">Hexo.</span></span><br><span class="line"><span class="attr">link:</span> <span class="attr">https://github.com/hexojs/hexo-server</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">official</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">server</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">console</span></span><br></pre></td></tr></table></figure></li><li><p>推送（push）分支。</p></li><li><p>建立一个新的合并申请（pull request）并描述改动。</p></li></ol><p><strong>本文转载自</strong> : <a href="https://hexo.io/zh-cn/docs/plugins" target="_blank" rel="noopener">Hexo中文网</a></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：&lt;/p&gt;
&lt;h3 id=&quot;脚本（S
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://code.newban.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>关于群晖NAS使用DownloadStation下载直播流的问题以及缓存目录挂载</title>
    <link href="https://code.newban.cn/459.html"/>
    <id>https://code.newban.cn/459.html</id>
    <published>2024-04-12T02:14:19.000Z</published>
    <updated>2024-04-12T10:24:09.964Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近有群晖NSA下载直播流的需求 在使用<code>DownloadStation</code>套件的时候遇到一些坑 在这里做个记录</p><h2 id="关于流的下载"><a href="#关于流的下载" class="headerlink" title="关于流的下载"></a>关于流的下载</h2><p>首先 我需要下载的流地址的格式为:<code>http://xxxx.flv</code></p><p>如果我使用常规添加链接地址的方式进行下载 就容易出现处于一直读取保存状态:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240412083406987.png" alt="image-20240412083406987"></p><p>这种状态下我们无法关闭应用 只能在套件中心停用该应用才能解决 否则后台会持续地从网络拉取数据:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240412084021153.png" alt="image-20240412084021153"></p><p>问题出在于 该地址输入框更适合填入种子的下载链接而不是视频或者流本身的 虽然这样也能变相地下载视频 但是极度不推荐 很多新手在使用的时候一不注意就掉了坑 我就是其中一个😂</p><p>正确的使用方式是将视频或者流地址填入搜索框然后回车:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240412085002263.png" alt="image-20240412085002263"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240412085055724.png" alt="image-20240412085055724"></p><p>此时视频就能正常下载了</p><p>可接下来新的问题又出现了 下载过程中无法在下载目录看到当前下载的文件 只有当视频下载完成或者手动终止该下载任务后才能看到 </p><p>很明显<code>Download Station</code>有个下载缓存目录 但是这个缓存目录我们在<code>File Station</code>中看不到 只能通过<code>ssh</code>在终端查看</p><p>由于我下载的是直播流视频 为了保证视频的完整性 我不能中断视频的下载 在这种情况下 如果要实时查看并当前下载的内容  方便随时播放  那么我需要将隐藏的缓存目录给显示到<code>File Station</code>中</p><p>这里 我们需要使用目录的挂载功能</p><h2 id="缓存目录的挂载"><a href="#缓存目录的挂载" class="headerlink" title="缓存目录的挂载"></a>缓存目录的挂载</h2><p><code>Download Station</code>默认的缓存目录是<code>/volume/@download</code> 如果我们要将其挂载到指定的目录比如<code>homes/download_cache</code> 那么需要先在<code>File Station</code>中手动创建该文件夹 </p><p>注意: 这里不建议使用终端命令进行创建 因为很容易创建隐藏文件</p><p>接下来 按照以下步骤进行缓存目录的挂载</p><ol><li><p>首先在电脑上打开我们的终端窗口 使用<code>ssh</code>连接我们的群晖<code>NAS</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 你的群晖登录用户名@群晖ip -p22</span><br></pre></td></tr></table></figure><p>回车输入登录密码 即可进入到我们的<code>NAS</code></p></li><li><p>然后使用<code>mount</code>指令将隐藏的缓存目录<code>@download</code>挂载到<code>download_cache</code> 如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount --<span class="built_in">bind</span> /volume/@download /volume/home/download_cache</span><br></pre></td></tr></table></figure></li><li><p>挂载完毕后 我们会在<code>File Station</code>中找到该目录 并查看到当前正在下载的视频</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240412094619148.png" alt="image-20240412094619148"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240412094719618.png" alt="image-20240412094719618"></p></li></ol><h2 id="种子缓存目录"><a href="#种子缓存目录" class="headerlink" title="种子缓存目录"></a>种子缓存目录</h2><p>上面我们提到 在种子链接输入框填入视频或流的下载地址 也可下载视频 但是这种方式是不推荐的  </p><p>如果你不小心误操作了 或者也想体验一把 那么坑定也想知道这种方式下载的视频缓存目录在到底在哪个位置</p><p>这里 我已经给大家提前探查明白了 这个种子的缓存目录就在<code>volume/@tmp</code>下的<code>btdl</code>文件夹中</p><p>如果你想查看这里面存放的数据首先需要修改以下目录权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chomd 777 volume/@tmp/btdl</span><br></pre></td></tr></table></figure><p>然后我们进入该目录会发现一个<code>upload</code>开头的文件 这个文件就是视频或种子文件:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240412103745114.png" alt="image-20240412103745114"></p><p>如果是视频文件  那么我们只需要将其拷贝出来修改一下文件后缀名就行</p><p>同样的 为了方便在<code>File Station</code>中查看并编辑该文件 我将这个种子缓存目录挂载到<code>home</code>中</p><p>操作步骤和上面的大同小异:</p><ol><li><p>在<code>Flie Station</code>中手动创建一个目录 用于种子缓存目录的映射 我这里将其命名为<code>temp</code> </p></li><li><p>使用<code>mount</code>指令将目录进行挂载</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount --<span class="built_in">bind</span> /volume/@tmp /volume/home/temp</span><br></pre></td></tr></table></figure></li><li><p>挂载完后 我们就能在<code>File Station</code>中找到该目录以及对应的文件</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240412103447862.png" alt="image-20240412103447862"></p><p>由于我个文件是个<code>flv</code>的视频 所以我将其后缀改为<code>.flv</code></p></li></ol><p><strong>需要注意的是:</strong> </p><p>假如你的群晖NAS设有多个存储空间 你若把<code>Download Station</code>套件安装到了<code>volume1</code>中 但是下载目录却指定在了<code>volume2</code>下 </p><p>那么 种子缓存目录需要在套件安装磁盘中也就是<code>volume1</code>里面找  <code>@tmp</code> 目录跟随的是套件</p><p>而下载缓存目录则是和下载目录同一个磁盘也就是<code>volume2</code>里面找 <code>@download</code>跟随的是下载目录</p><h2 id="关于Download-Station使用感受"><a href="#关于Download-Station使用感受" class="headerlink" title="关于Download Station使用感受"></a>关于Download Station使用感受</h2><p>总体还是比较满意的 下载的稳定性不错</p><p>大部分下载软件都不支持流的断点续传 然而<code>Download Station</code>却能做到这一点 值得一赞</p><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近有群晖NSA下载直播流的需求 在使用&lt;code&gt;DownloadStation&lt;/code&gt;套件的时候遇到一些坑 在这里做个记录&lt;/p&gt;
      
    
    </summary>
    
    
    
      <category term="NAS" scheme="https://code.newban.cn/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>使用Wireshark对网络进行抓包</title>
    <link href="https://code.newban.cn/458.html"/>
    <id>https://code.newban.cn/458.html</id>
    <published>2024-04-11T09:14:19.000Z</published>
    <updated>2024-04-19T13:14:28.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p><code>Wireshark</code>是一款非常强大的跨平台抓包工具 支持<code>Mac</code>和<code>Windows</code>平台</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411201058820.png" alt="image-20240411201058820"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411201029770.png" alt="image-20240411201029770"></p><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p><a href="https://www.wireshark.org/" target="_blank" rel="noopener">点击进入官网</a></p><h2 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h2><p>这里以<code>Mac</code>平台结合谷歌浏览器为例进行配置</p><ol><li><p>进入谷歌浏览器设置页 选择启动时打开新的标签页</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411184036016.png" alt="image-20240411184036016"></p></li><li><p>创建<code>keylog.txt</code>用于存储<code>ssl</code>密钥 方便<code>https</code>抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Users/xxx</span><br><span class="line">touch keylog.txt</span><br></pre></td></tr></table></figure><p>注意:<code>keylog.txt</code>的存放位置由你自己决定  这里我存放到<code>Users</code>目录下</p></li><li><p>执行以下指令启动谷歌浏览器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --ssl-key-log-file=/Users/xxx/keylog.txt</span><br></pre></td></tr></table></figure><p><code>--ssl-key-log-file</code> : 表示将<code>ssl</code>密钥输出到指定文件中</p><p>注意: </p><ol><li><p>由于我将<code>keylog.txt</code>文件放在了用户目录下 所以指令执行必须加<code>sudo</code>表示以管理者的身份运行</p></li><li><p>如果你的谷歌浏览器并未安装在<code>Applications</code>目录下 可以利用以下指令来获取Chrome应用的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find / -iname <span class="string">"Google Chrome"</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411185614773.png" alt="image-20240411185614773"></p></li></ol></li><li><p>在新打开的浏览器中输入你需要进行<code>https</code>抓包的网址 并回车</p><p>这里我以百度官网<code>https://baidu.com</code>为例</p></li><li><p>此时我们会发现<code>keylog.txt</code>文件中已经有了相应的日志信息</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411185017352.png" alt="image-20240411185017352"></p></li><li><p>启动<code>Wireshark</code> 选择需要监控的网卡</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411200537770.png" alt="image-20240411200537770"></p></li><li><p>并配置TLS 关联<code>keylog</code>文件</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411185810657.png" alt="image-20240411185810657"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411185830566.png" alt="image-20240411185830566"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411190033618.png" alt="image-20240411190033618"></p></li></ol><p>至此 软件配置完毕 接下来开始抓包测试</p><h2 id="抓包测试"><a href="#抓包测试" class="headerlink" title="抓包测试"></a>抓包测试</h2><ol><li><p>打开百度网页 然后按<code>F12</code>进入<code>Chrome</code>开发者工具 获取百度的实际<code>ip</code>地址 用于过滤使用</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411190618555.png" alt="image-20240411190618555"></p></li><li><p>在<code>Wireshark</code> 过滤栏中输入<code>ip.dst==36.155.132.76 and http</code>对该<code>ip</code>进行过滤</p></li></ol><h2 id="软件详细使用"><a href="#软件详细使用" class="headerlink" title="软件详细使用"></a>软件详细使用</h2><h3 id="利用好过滤"><a href="#利用好过滤" class="headerlink" title="利用好过滤"></a>利用好过滤</h3><p><code>Wireshark</code>的快速上手的技巧那就是<strong>使用过滤</strong></p><p>想要在大量的数据中获取到自己想要的数据 那就必须利用好过滤关键字</p><p>我们进行网络抓包时大部分都是抓取<code>http/https</code>请求 因此我们只需在过滤栏中输入<code>http</code>关键字:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411195505450.png" alt="image-20240411195505450"></p><p>当我们在过滤栏进行输入时<code>Wireshark</code>会有自动补全提示 当过滤栏背景为绿色表示软件能识别并根据该关键字进行数据过滤 如果背景色为红色 那表明无法根据该关键字进行过滤:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411195710102.png" alt="image-20240411195710102"></p><h3 id="过滤json数据"><a href="#过滤json数据" class="headerlink" title="过滤json数据"></a>过滤json数据</h3><p>通常我们可能会抓取一下应用的<code>api</code> 返回的数据基本都是<code>json</code>格式 此时我们可以在过滤栏输入<code>http and json</code>关键字 </p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411195944621.png" alt="image-20240411195944621"></p><h3 id="过滤图片"><a href="#过滤图片" class="headerlink" title="过滤图片"></a>过滤图片</h3><p>如果要过滤图片 可以使用<code>http.content_type</code> 比如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.content_type ==&quot;image/png&quot;</span><br></pre></td></tr></table></figure><p>不过为了更好地过滤出数据 我推荐大家使用<code>contains</code>的形式而不是<code>==</code> 这样容错率能大幅提升</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.content_type contains &quot;image&quot;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411224905514.png" alt="image-20240411224905514"></p><h3 id="过滤音视频"><a href="#过滤音视频" class="headerlink" title="过滤音视频"></a>过滤音视频</h3><p>如果是<code>amr</code>格式的音频可以在过滤栏输入<code>http and amr</code>关键字</p><p>如果是<code>MP4</code>格式视频可以在过滤栏输入<code>http and mp4</code>关键字</p><p>如果是直播流 可以尝试输入<code>rtp</code>关键字</p><p>当然我们还可以通过模糊过滤的方式 比如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.content_type contains &quot;video&quot;</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.content_type contains &quot;audio&quot;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411225240083.png" alt="image-20240411225240083"></p><h3 id="根据ip地址过滤"><a href="#根据ip地址过滤" class="headerlink" title="根据ip地址过滤"></a>根据ip地址过滤</h3><p>这里需要注意的是 一个完整的数据交互是包括请求和响应两部分的</p><p>如果我们需要抓请求的部分 那么使用<code>dst</code>关键字:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.dst==服务器ip地址</span><br></pre></td></tr></table></figure><p>如果我们需要抓响应的的部分 那么使用<code>src</code>关键字 也就是来源于对方 向我们发送数据:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.src==服务器ip地址</span><br></pre></td></tr></table></figure><p>如果请求和响应两个部分都想抓取 那就用<code>addr</code>关键字:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.addr==服务器ip地址</span><br></pre></td></tr></table></figure><p>也就是说无论是<code>Suorce</code>还是<code>Destination</code>只要包含该<code>ip</code>的都会过滤出来</p><h3 id="根据请求方法过滤"><a href="#根据请求方法过滤" class="headerlink" title="根据请求方法过滤"></a>根据请求方法过滤</h3><p>如果我们要指定过滤<code>GET</code>或者<code>POST</code>方法 那么可以使用以下关键字:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.request.method==GET</span><br></pre></td></tr></table></figure><h3 id="根据请求路径进行过滤"><a href="#根据请求路径进行过滤" class="headerlink" title="根据请求路径进行过滤"></a>根据请求路径进行过滤</h3><p>有时候同一个应用会使用不同的<code>ip</code>地址 尤其是某些直播应用 虽然每个视频ip可能会不同 但是地址路径是一样的 比如以<code>live/xxx.flv</code>结尾 那么我们就可以根据这个进行匹配过滤 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.request.uri contains &quot;live&quot;</span><br></pre></td></tr></table></figure><h3 id="根据排除法进行过滤"><a href="#根据排除法进行过滤" class="headerlink" title="根据排除法进行过滤"></a>根据排除法进行过滤</h3><p>如果我们要排除某个ip的数据, 我们可以在关键字前面加上<code>not</code>或者<code>!</code> 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(ip.addr == 192.168.0.1)</span><br></pre></td></tr></table></figure><h3 id="根据内容长度进行过滤"><a href="#根据内容长度进行过滤" class="headerlink" title="根据内容长度进行过滤"></a>根据内容长度进行过滤</h3><p>如果我们要根据请求的内容进行过滤可以使用<code>http.content_length</code> 关键字 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.content_length &lt;=30</span><br></pre></td></tr></table></figure><h3 id="根据正则进行匹配过滤"><a href="#根据正则进行匹配过滤" class="headerlink" title="根据正则进行匹配过滤"></a>根据正则进行匹配过滤</h3><p>如果我们要使用正则匹配 可以使用<code>matches</code>关键字 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.request.uri matches &quot;user&quot;</span><br></pre></td></tr></table></figure><p>注意: <code>matches</code>匹配不区分大小写</p><h3 id="根据域名进行过滤"><a href="#根据域名进行过滤" class="headerlink" title="根据域名进行过滤"></a>根据域名进行过滤</h3><p>如果需要根据域名进行过滤 可以使用<code>http.host</code>关键字 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.host==baidu.com</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.host contains &quot;baidu&quot;</span><br></pre></td></tr></table></figure><p>如果要按照源地址和目标地址过滤 可以使用<code>src www.baidu.com</code>和<code>dst  www.baidu.com</code></p><h3 id="根据cookie进行过滤"><a href="#根据cookie进行过滤" class="headerlink" title="根据cookie进行过滤"></a>根据cookie进行过滤</h3><p>使用<code>http.cookie</code>关键字 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.cookie contains &quot;userid&quot;</span><br></pre></td></tr></table></figure><h3 id="根据端口号过滤"><a href="#根据端口号过滤" class="headerlink" title="根据端口号过滤"></a>根据端口号过滤</h3><p>使用<code>http.port</code>关键字 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.port==80</span><br></pre></td></tr></table></figure><h3 id="根据http响应状态码过滤"><a href="#根据http响应状态码过滤" class="headerlink" title="根据http响应状态码过滤"></a>根据http响应状态码过滤</h3><p>可以使用http.response.code关键字 如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.response.code==200</span><br></pre></td></tr></table></figure><h3 id="结合使用"><a href="#结合使用" class="headerlink" title="结合使用"></a>结合使用</h3><p>以上所有的关键字 都可以使用与或非运算符进行结合使用 比如我想过滤一个<code>http</code>请求且请求响应为<code>403</code>的数据 过滤方式如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http and (http.response.code==403)</span><br></pre></td></tr></table></figure><h3 id="关于清除界面数据"><a href="#关于清除界面数据" class="headerlink" title="关于清除界面数据"></a>关于清除界面数据</h3><p>当我们感觉数据过多 需要清理界面数据时 需要停止抓包 然后再点击开始抓包 这个时候软件会给予提示 是否需要将数据包进行保存到本地 我们只需要点不保存即可:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411200226017.png" alt="image-20240411200226017"></p><p>或者直接点击重新抓包一步到位:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411212025725.png" alt="image-20240411212025725"></p><h2 id="Wireshark-的优势"><a href="#Wireshark-的优势" class="headerlink" title="Wireshark 的优势"></a><code>Wireshark</code> 的优势</h2><ul><li><p>能抓取物理层到应用层七大层数据 这是其他诸如<code>Charles、Fiddler</code>抓包软件所不具备的</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/20240411200816.png" alt></p></li><li><p>监控网卡 所有数据无所遁形</p></li><li><p>有些<code>App</code>禁止代理状态下使用 或者内部走的非代理流量 那么这种问题<code>Wireshark</code>可以轻松解决</p></li></ul><p>总之 <code>Wireshark</code>和其它抓包软件结合使用 基本上能解决我们的抓包需求</p><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;软件介绍&quot;&gt;&lt;a href=&quot;#软件介绍&quot; class=&quot;headerlink&quot; title=&quot;软件介绍&quot;&gt;&lt;/a&gt;软件介绍&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Wireshark&lt;/code&gt;是一款非常强大的跨平台抓包工具 支持&lt;code&gt;Mac&lt;/code&gt;和&lt;code
      
    
    </summary>
    
    
    
      <category term="抓包" scheme="https://code.newban.cn/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>使用Proxyman抓取android应用数据请求</title>
    <link href="https://code.newban.cn/457.html"/>
    <id>https://code.newban.cn/457.html</id>
    <published>2024-04-11T02:14:19.000Z</published>
    <updated>2024-04-11T10:38:12.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p><code>Proxyman</code>是一款跨平台的<code>HTTP/HTTPS</code>网络抓包工具 目前支持<code>Windows</code>、<code>Linux</code>、<code>MacOS</code>、<code>IOS</code>四大平台 </p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411171337537.png" alt="image-20240411171337537"></p><p>软件主界面如下:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411175955421.png" alt="image-20240411175955421"></p><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p><a href="https://proxyman.io/" target="_blank" rel="noopener">点击进入官网</a></p><h2 id="Android抓包"><a href="#Android抓包" class="headerlink" title="Android抓包"></a>Android抓包</h2><p>这里以网易的<code>MUMU</code>模拟器为例 给大介绍如果使用<code>Proxyman</code>抓取手机上的<code>HTTP/HTTPS</code>请求</p><h3 id="第一步-打开proxyman获取代理服务地址和端口号"><a href="#第一步-打开proxyman获取代理服务地址和端口号" class="headerlink" title="第一步 打开proxyman获取代理服务地址和端口号"></a>第一步 打开proxyman获取代理服务地址和端口号</h3><p>点击菜单栏<code>Certificate--&gt;Install Certificate on Android--&gt;Physical Devices</code> </p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411172928040.png" alt="image-20240411172928040"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411173138799.png" alt="image-20240411173138799"></p><h3 id="第二步-在模拟器上配置网络代理"><a href="#第二步-在模拟器上配置网络代理" class="headerlink" title="第二步 在模拟器上配置网络代理"></a>第二步 在模拟器上配置网络代理</h3><p>进入<code>设置--&gt;WLAN</code>长按网络名称弹出对话框 这里我们点击修改网络:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411173440435.png" alt="image-20240411173440435"></p><p>然后将服务地址和端口号填入并点击保存:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411173512415.png" alt="image-20240411173512415"></p><h3 id="第三步-下载SSL证书"><a href="#第三步-下载SSL证书" class="headerlink" title="第三步 下载SSL证书"></a>第三步 下载SSL证书</h3><p>证书用于抓取<code>HTTPS</code>请求</p><p>打开模拟器中的浏览器 输入地址<code>http://proxy.man/ssl</code>下载证书并安装</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411174336396.png" alt="image-20240411174336396"></p><h3 id="第四步-测试能否正常抓包"><a href="#第四步-测试能否正常抓包" class="headerlink" title="第四步 测试能否正常抓包"></a>第四步 测试能否正常抓包</h3><p>在手机浏览器上输入一个返回<code>json</code>串测试地址进行配置验证 测试地址如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/api/search/get/web?csrf_token=hlpretag=&amp;hlposttag=&amp;s=阳光正好-十二越&amp;type=1&amp;offset=0&amp;total=true&amp;limit=1</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411174633446.png" alt="image-20240411174633446"></p><p>如果我们能在<code>proxman</code>中能找到对应的测试地址和请求响应 则表示配置成功:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411174809359.png" alt="image-20240411174809359"></p><p>不管是<code>http</code>还是<code>https</code>请求都能正常拦截:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240411175000111.png" alt="image-20240411175000111"></p><p>配置完毕!</p><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;软件介绍&quot;&gt;&lt;a href=&quot;#软件介绍&quot; class=&quot;headerlink&quot; title=&quot;软件介绍&quot;&gt;&lt;/a&gt;软件介绍&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Proxyman&lt;/code&gt;是一款跨平台的&lt;code&gt;HTTP/HTTPS&lt;/code&gt;网络抓包工具 目前支持
      
    
    </summary>
    
    
    
      <category term="抓包" scheme="https://code.newban.cn/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>各大音乐平台的api汇总</title>
    <link href="https://code.newban.cn/456.html"/>
    <id>https://code.newban.cn/456.html</id>
    <published>2024-04-11T01:14:19.000Z</published>
    <updated>2024-04-12T11:48:24.482Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网易云音乐"><a href="#网易云音乐" class="headerlink" title="网易云音乐"></a>网易云音乐</h2><h3 id="歌曲搜索"><a href="#歌曲搜索" class="headerlink" title="歌曲搜索"></a>歌曲搜索</h3><h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><p>请求方式 : POST</p><p>请求地址 : </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://music.163.com/api/search/get/web?csrf_token=hlpretag=&amp;hlposttag=&amp;s=歌名&amp;type=1&amp;offset=0&amp;total=true&amp;limit=1</span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://music.163.com/api/search/get/web?csrf_token=hlpretag=&amp;hlposttag=&amp;s=阳光正好-十二越&amp;type=1&amp;offset=0&amp;total=true&amp;limit=1</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>请求结果如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"result"</span>: &#123;</span><br><span class="line"><span class="attr">"songs"</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">1335942808</span>,</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"阳光正好"</span>,</span><br><span class="line"><span class="attr">"artists"</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">31021271</span>,</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"十二越"</span>,</span><br><span class="line"><span class="attr">"picUrl"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"alias"</span>: [],</span><br><span class="line"><span class="attr">"albumSize"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"picId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"fansGroup"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"img1v1Url"</span>: <span class="string">"https://p2.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg"</span>,</span><br><span class="line"><span class="attr">"img1v1"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"trans"</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="attr">"album"</span>: &#123;</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">74994476</span>,</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"阳光正好"</span>,</span><br><span class="line"><span class="attr">"artist"</span>: &#123;</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"picUrl"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"alias"</span>: [],</span><br><span class="line"><span class="attr">"albumSize"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"picId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"fansGroup"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"img1v1Url"</span>: <span class="string">"https://p1.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg"</span>,</span><br><span class="line"><span class="attr">"img1v1"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"trans"</span>: <span class="literal">null</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"publishTime"</span>: <span class="number">1545753600000</span>,</span><br><span class="line"><span class="attr">"size"</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">"copyrightId"</span>: <span class="number">558010</span>,</span><br><span class="line"><span class="attr">"status"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"picId"</span>: <span class="number">109951163752920822</span>,</span><br><span class="line"><span class="attr">"mark"</span>: <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"duration"</span>: <span class="number">304111</span>,</span><br><span class="line"><span class="attr">"copyrightId"</span>: <span class="number">558010</span>,</span><br><span class="line"><span class="attr">"status"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"alias"</span>: [],</span><br><span class="line"><span class="attr">"rtype"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"ftype"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"mvid"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"fee"</span>: <span class="number">8</span>,</span><br><span class="line"><span class="attr">"rUrl"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"mark"</span>: <span class="number">8192</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="attr">"songCount"</span>: <span class="number">1</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"code"</span>: <span class="number">200</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取歌曲播放直链地址"><a href="#获取歌曲播放直链地址" class="headerlink" title="获取歌曲播放直链地址"></a>获取歌曲播放直链地址</h3><h4 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h4><p>请求方式 :<code>GET</code></p><p>请求地址 : </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://music.163.com/song/media/outer/url?id=歌曲ID.mp3</span><br></pre></td></tr></table></figure><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><p>歌曲ID我们可以通过浏览器地址获取 比如 <code>http://music.163.com/#/m/song?id=1901359372</code></p><p>那么该首歌的直链地址为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://music.163.com/song/media/outer/url?id=1901359372.mp3</span><br></pre></td></tr></table></figure><p>我们可以将该地址其嵌入到 HTML中 使用<code>audio</code>标签:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">title</span>=<span class="string">"歌名"</span> <span class="attr">src</span>=<span class="string">"直链地址"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p><audio controls="controls" title="歌名" src="https://music.163.com/song/media/outer/url?id=1901359372.mp3"></audio></p><p>注意: 这种方式只能获取到免费歌曲的直链 如果是VIP收费歌曲 则获取不到 </p><h3 id="获取歌曲歌词"><a href="#获取歌曲歌词" class="headerlink" title="获取歌曲歌词"></a>获取歌曲歌词</h3><h4 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h4><p>请求方式 : <code>GET</code></p><p>请求地址:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/api/song/lyric?os=pc&amp;id=歌曲ID&amp;lv=-1&amp;kv=-1&amp;tv=-1</span><br></pre></td></tr></table></figure><p>请求参数含义:</p><ul><li><code>&amp;tv=-1</code> : 表示获取歌词译文</li><li><code>&amp;lv=-1</code> : 表示获取歌词原文</li><li><code>&amp;kv=-1</code> : 表示获取歌词状态信息</li></ul><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/api/song/lyric?os=pc&amp;id=1901359372&amp;lv=-1&amp;kv=-1&amp;tv=-1</span><br></pre></td></tr></table></figure><h4 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h4><p>请求结果如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"sgc"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">"sfy"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">"qfy"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">"lrc"</span>: &#123;</span><br><span class="line"><span class="attr">"version"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="attr">"lyric"</span>: <span class="string">"[00:00.00] 作词 : 十二越\n[00:01.00] 作曲 : 十二越\n[00:02.00] 编曲 : 十二越\n[00:16.28]\n[00:31.53] 你在哪里\n[00:37.87] 回忆闪烁不停\n[00:45.05] 我在这里\n[00:50.81] 一直等你\n[00:53.24] 在原地\n[00:57.71]\n[00:58.54] 时间一点一点过去\n[01:03.65] 真假不明\n[01:07.00] 沉醉在我们记忆\n[01:11.04]\n[01:12.05] 世界开始变得忧郁\n[01:17.14] 昏暗不明\n[01:20.49] 只为了你\n[01:25.39]\n[01:25.62] 你说 你说你还爱我\n[01:30.63] 是唯一的承诺\n[01:33.92] 却只剩承诺 没有了结果\n[01:36.43]\n[01:38.86] 你说 你说你会等我\n[01:44.12] 是绝对的承诺\n[01:47.55] 却没了联络 只剩下沉默\n[01:49.28]\n[01:50.62]\n[01:52.65] 你在哪里\n[01:59.01] 回忆闪烁不停\n[02:06.15] 我在这里\n[02:11.62] 一直等你\n[02:14.56] 在原地\n[02:18.24]\n[02:19.68] 时间一点一点过去\n[02:24.75] 真假不明\n[02:28.15] 沉醉在我们记忆\n[02:29.63]\n[02:33.14] 世界开始变得忧郁\n[02:38.23] 昏暗不明\n[02:41.61] 只为了你\n[02:43.30]\n[02:46.70] 你说 你说你还爱我\n[02:51.73] 是唯一的承诺\n[02:55.12] 却只剩承诺 没有了结果\n[02:59.38]\n[03:00.18] 你说 你说你会等我\n[03:05.32] 是绝对的承诺\n[03:08.69] 却没了联络 只剩下沉默\n[03:10.41]\n[03:13.82] 你说 你说你还爱我\n[03:19.69] 最后的承诺变成了软弱\n[03:25.19] 你说 你说 你说....\n[03:28.86]\n[03:40.89] 你说 你说你还爱我\n[03:45.89] 是唯一的承诺\n[03:49.26] 却只剩承诺 没有了结果\n[03:51.51]\n[03:54.36] 你说 你说你还爱我\n[04:00.33] 最后的承诺变成了软弱\n[04:10.02] 你说\n[04:12.56]\n[04:29.25] 混音 : 十二越\n"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"klyric"</span>: &#123;</span><br><span class="line"><span class="attr">"version"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"lyric"</span>: <span class="string">""</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"tlyric"</span>: &#123;</span><br><span class="line"><span class="attr">"version"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"lyric"</span>: <span class="string">""</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"code"</span>: <span class="number">200</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取歌曲的详细信息"><a href="#获取歌曲的详细信息" class="headerlink" title="获取歌曲的详细信息"></a>获取歌曲的详细信息</h3><h4 id="格式-3"><a href="#格式-3" class="headerlink" title="格式"></a>格式</h4><p>请求方法: <code>GET</code></p><p>请求地址 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/api/song/detail/?id=歌曲id&amp;ids=[歌曲id]</span><br></pre></td></tr></table></figure><h4 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/api/song/detail/?id=1901359372&amp;ids=[1901359372]</span><br></pre></td></tr></table></figure><h4 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h4><p>请求结果如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"songs"</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"你说你还爱我"</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">1901359372</span>,</span><br><span class="line"><span class="attr">"position"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"alias"</span>: [],</span><br><span class="line"><span class="attr">"status"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"fee"</span>: <span class="number">8</span>,</span><br><span class="line"><span class="attr">"copyrightId"</span>: <span class="number">2708773</span>,</span><br><span class="line"><span class="attr">"disc"</span>: <span class="string">"01"</span>,</span><br><span class="line"><span class="attr">"no"</span>: <span class="number">4</span>,</span><br><span class="line"><span class="attr">"artists"</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"十二越"</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">31021271</span>,</span><br><span class="line"><span class="attr">"picId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"img1v1Id"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"briefDesc"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"picUrl"</span>: <span class="string">"http://p2.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg"</span>,</span><br><span class="line"><span class="attr">"img1v1Url"</span>: <span class="string">"http://p2.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg"</span>,</span><br><span class="line"><span class="attr">"albumSize"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"alias"</span>: [],</span><br><span class="line"><span class="attr">"trans"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"musicSize"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"topicPerson"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="attr">"album"</span>: &#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"茶余饭后"</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">137142351</span>,</span><br><span class="line"><span class="attr">"type"</span>: <span class="string">"EP"</span>,</span><br><span class="line"><span class="attr">"size"</span>: <span class="number">5</span>,</span><br><span class="line"><span class="attr">"picId"</span>: <span class="number">109951166702919266</span>,</span><br><span class="line"><span class="attr">"blurPicUrl"</span>: <span class="string">"http://p2.music.126.net/3474m94J-3GI3LIfdRTBmA==/109951166702919266.jpg"</span>,</span><br><span class="line"><span class="attr">"companyId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"pic"</span>: <span class="number">109951166702919266</span>,</span><br><span class="line"><span class="attr">"picUrl"</span>: <span class="string">"http://p2.music.126.net/3474m94J-3GI3LIfdRTBmA==/109951166702919266.jpg"</span>,</span><br><span class="line"><span class="attr">"publishTime"</span>: <span class="number">1638892800000</span>,</span><br><span class="line"><span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"tags"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"company"</span>: <span class="string">"HIFIVE智能经纪人"</span>,</span><br><span class="line"><span class="attr">"briefDesc"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"artist"</span>: &#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"picId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"img1v1Id"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"briefDesc"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"picUrl"</span>: <span class="string">"http://p2.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg"</span>,</span><br><span class="line"><span class="attr">"img1v1Url"</span>: <span class="string">"http://p2.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg"</span>,</span><br><span class="line"><span class="attr">"albumSize"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"alias"</span>: [],</span><br><span class="line"><span class="attr">"trans"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"musicSize"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"topicPerson"</span>: <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"songs"</span>: [],</span><br><span class="line"><span class="attr">"alias"</span>: [],</span><br><span class="line"><span class="attr">"status"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"copyrightId"</span>: <span class="number">2708773</span>,</span><br><span class="line"><span class="attr">"commentThreadId"</span>: <span class="string">"R_AL_3_137142351"</span>,</span><br><span class="line"><span class="attr">"artists"</span>: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"十二越"</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">31021271</span>,</span><br><span class="line"><span class="attr">"picId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"img1v1Id"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"briefDesc"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"picUrl"</span>: <span class="string">"http://p2.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg"</span>,</span><br><span class="line"><span class="attr">"img1v1Url"</span>: <span class="string">"http://p2.music.126.net/6y-UleORITEDbvrOLV0Q8A==/5639395138885805.jpg"</span>,</span><br><span class="line"><span class="attr">"albumSize"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"alias"</span>: [],</span><br><span class="line"><span class="attr">"trans"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"musicSize"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"topicPerson"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="attr">"subType"</span>: <span class="string">"录音室版"</span>,</span><br><span class="line"><span class="attr">"transName"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"onSale"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">"mark"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"gapless"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"dolbyMark"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"picId_str"</span>: <span class="string">"109951166702919266"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"starred"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">"popularity"</span>: <span class="number">5</span>,</span><br><span class="line"><span class="attr">"score"</span>: <span class="number">5</span>,</span><br><span class="line"><span class="attr">"starredNum"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"duration"</span>: <span class="number">269258</span>,</span><br><span class="line"><span class="attr">"playedNum"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"dayPlays"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"hearTime"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"sqMusic"</span>: &#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">6988110024</span>,</span><br><span class="line"><span class="attr">"size"</span>: <span class="number">28403471</span>,</span><br><span class="line"><span class="attr">"extension"</span>: <span class="string">"flac"</span>,</span><br><span class="line"><span class="attr">"sr"</span>: <span class="number">44100</span>,</span><br><span class="line"><span class="attr">"dfsId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"bitrate"</span>: <span class="number">843901</span>,</span><br><span class="line"><span class="attr">"playTime"</span>: <span class="number">269258</span>,</span><br><span class="line"><span class="attr">"volumeDelta"</span>: <span class="number">-37808</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"hrMusic"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"ringtone"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"crbt"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"audition"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"copyFrom"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="attr">"commentThreadId"</span>: <span class="string">"R_SO_4_1901359372"</span>,</span><br><span class="line"><span class="attr">"rtUrl"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"ftype"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"rtUrls"</span>: [],</span><br><span class="line"><span class="attr">"copyright"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"transName"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"sign"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"mark"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"originCoverType"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"originSongSimpleData"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"single"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"noCopyrightRcmd"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"hMusic"</span>: &#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">6988110025</span>,</span><br><span class="line"><span class="attr">"size"</span>: <span class="number">10772942</span>,</span><br><span class="line"><span class="attr">"extension"</span>: <span class="string">"mp3"</span>,</span><br><span class="line"><span class="attr">"sr"</span>: <span class="number">44100</span>,</span><br><span class="line"><span class="attr">"dfsId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"bitrate"</span>: <span class="number">320000</span>,</span><br><span class="line"><span class="attr">"playTime"</span>: <span class="number">269258</span>,</span><br><span class="line"><span class="attr">"volumeDelta"</span>: <span class="number">-37825</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"mMusic"</span>: &#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">6988110027</span>,</span><br><span class="line"><span class="attr">"size"</span>: <span class="number">6463782</span>,</span><br><span class="line"><span class="attr">"extension"</span>: <span class="string">"mp3"</span>,</span><br><span class="line"><span class="attr">"sr"</span>: <span class="number">44100</span>,</span><br><span class="line"><span class="attr">"dfsId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"bitrate"</span>: <span class="number">192000</span>,</span><br><span class="line"><span class="attr">"playTime"</span>: <span class="number">269258</span>,</span><br><span class="line"><span class="attr">"volumeDelta"</span>: <span class="number">-35358</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"lMusic"</span>: &#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">6988110029</span>,</span><br><span class="line"><span class="attr">"size"</span>: <span class="number">4309203</span>,</span><br><span class="line"><span class="attr">"extension"</span>: <span class="string">"mp3"</span>,</span><br><span class="line"><span class="attr">"sr"</span>: <span class="number">44100</span>,</span><br><span class="line"><span class="attr">"dfsId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"bitrate"</span>: <span class="number">128000</span>,</span><br><span class="line"><span class="attr">"playTime"</span>: <span class="number">269258</span>,</span><br><span class="line"><span class="attr">"volumeDelta"</span>: <span class="number">-33920</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"bMusic"</span>: &#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">6988110029</span>,</span><br><span class="line"><span class="attr">"size"</span>: <span class="number">4309203</span>,</span><br><span class="line"><span class="attr">"extension"</span>: <span class="string">"mp3"</span>,</span><br><span class="line"><span class="attr">"sr"</span>: <span class="number">44100</span>,</span><br><span class="line"><span class="attr">"dfsId"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"bitrate"</span>: <span class="number">128000</span>,</span><br><span class="line"><span class="attr">"playTime"</span>: <span class="number">269258</span>,</span><br><span class="line"><span class="attr">"volumeDelta"</span>: <span class="number">-33920</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"mvid"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"mp3Url"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">"rtype"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"rurl"</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"><span class="attr">"equalizers"</span>: &#123;&#125;,</span><br><span class="line"><span class="attr">"code"</span>: <span class="number">200</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="QQ音乐"><a href="#QQ音乐" class="headerlink" title="QQ音乐"></a>QQ音乐</h2><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;网易云音乐&quot;&gt;&lt;a href=&quot;#网易云音乐&quot; class=&quot;headerlink&quot; title=&quot;网易云音乐&quot;&gt;&lt;/a&gt;网易云音乐&lt;/h2&gt;&lt;h3 id=&quot;歌曲搜索&quot;&gt;&lt;a href=&quot;#歌曲搜索&quot; class=&quot;headerlink&quot; title=&quot;歌曲搜索&quot;
      
    
    </summary>
    
    
    
      <category term="音乐api" scheme="https://code.newban.cn/tags/%E9%9F%B3%E4%B9%90api/"/>
    
  </entry>
  
  <entry>
    <title>Chrome浏览器中如何下载SVG图片</title>
    <link href="https://code.newban.cn/454.html"/>
    <id>https://code.newban.cn/454.html</id>
    <published>2024-04-09T01:14:19.000Z</published>
    <updated>2024-04-10T01:30:44.724Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>当我们通过浏览器以图片链接的形式访问SVG图片时 我们会发现无法通过鼠标右键复制该图片</p><p>如果不考虑图片清晰度 那么可以用截图的方式简单粗暴地将图片拷贝下来</p><p>我们都知道SVG是矢量图 是一种基于XML语法的图像格式 这中格式图片可以实现无限缩放而不失真 所以我们必须将原图代码给拷贝下来才行</p><p>既然是代码 那就只能在开发者工具页面找</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li><p>点击图片鼠标右键选择检查 进入开发者页面</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240409112448266.png" alt="image-20240409112448266"></p></li><li><p>找到<code>svg</code>标签 鼠标右键<code>Copy</code>→<code>Copy Element</code></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240409112542590.png" alt="image-20240409112542590"></p></li><li><p>将拷贝到的源代码粘贴到文本文档中 并将文件后缀改成<code>svg</code>即可</p></li></ol><h2 id="SVG相关工具"><a href="#SVG相关工具" class="headerlink" title="SVG相关工具"></a>SVG相关工具</h2><ul><li><a href="https://convertio.co/zh/png-svg/" target="_blank" rel="noopener">SVG在线转PNG</a></li><li><a href="https://www.youcompress.com/zh-cn/svg/" target="_blank" rel="noopener">SVG图片在线压缩</a></li><li><a href="https://onlineconvertfree.com/zh/convert-format/pdf-to-svg" target="_blank" rel="noopener">PDF转SVG</a></li></ul><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;当我们通过浏览器以图片链接的形式访问SVG图片时 我们会发现无法通过鼠标右键复制该图片&lt;/p&gt;
&lt;p&gt;如果不考虑图片清晰度 那么可以用截图的
      
    
    </summary>
    
    
    
      <category term="SVG" scheme="https://code.newban.cn/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>Git根据commit信息过滤并提取相应文件</title>
    <link href="https://code.newban.cn/448.html"/>
    <id>https://code.newban.cn/448.html</id>
    <published>2024-04-07T11:14:19.000Z</published>
    <updated>2024-04-08T02:36:39.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>最近发现<code>GitHub</code>图床仓库容量过大 已经严重影响到使用了 于是我准备将这个仓库按照不同的<code>commit</code>拆分多个独立的小仓库 方便后期的维护和管理</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li><p>首先创建一个无内容的空分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --orphan new_branch_name</span><br></pre></td></tr></table></figure></li><li><p>清除目录下所有的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm -rf .</span><br></pre></td></tr></table></figure></li><li><p>将指定某个或者某些个<code>commit</code>提取到新分支上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git cherry-pick 12345abc def678 98765fed</span><br></pre></td></tr></table></figure><p>如果是一系列连续的<code>commits</code>，可以使用范围操作符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git cherry-pick commit1^..commit2</span><br></pre></td></tr></table></figure><p>如果你想要按照某种模式过滤<code>commits</code>，可以使用<code>git log</code>和<code>grep</code>结合<code>cherry-pick</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> master --oneline | grep <span class="string">'pattern'</span> | awk <span class="string">'&#123;print $1&#125;'</span> | xargs git cherry-pick</span><br></pre></td></tr></table></figure><p>这里需要将<code>pattern</code>替换为你想要匹配的文本，例如一个作者名或者某个关键词</p><ul><li><code>git log master</code>: 由于是空分支 无任何<code>log</code>记录 这里我要获取<code>master</code>分支上的<code>commit</code>信息</li><li><code>grep &#39;pattern&#39;</code>: 对<code>commit</code>信息进行匹配过滤</li><li><code>--oneline</code> : 匹配到的<code>commitid</code>在一行显示</li><li><code>awk &#39;{print $1}&#39;| xargs git cherry-pick</code>: 将匹配到的<code>commit</code>打印出来 并作为<code>git cherry-pick</code>的参数</li></ul></li><li><p>最后 将目录下提取出的文件迁移至新仓库中即可</p></li></ol><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;p&gt;最近发现&lt;code&gt;GitHub&lt;/code&gt;图床仓库容量过大 已经严重影响到使用了 于是我准备将这个仓库按照不同的&lt;code&gt;commit
      
    
    </summary>
    
    
    
      <category term="Git" scheme="https://code.newban.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Paypal绑定收款银行账户的注意事项</title>
    <link href="https://code.newban.cn/446.html"/>
    <id>https://code.newban.cn/446.html</id>
    <published>2024-04-06T09:14:19.000Z</published>
    <updated>2024-04-08T14:00:52.125Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前国外的大部分平台都支持<code>Paypal</code>收付款 如果你在某些平台赚取了一些美元需要通过<code>Paypal</code>提现到国内账户 那么就需要关联银行账户</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240406124429746.png" alt="image-20240406124429746"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240406124626479.png" alt="image-20240406124626479"></p><p>目前<code>Paypal</code>是以电汇的形式进行打款 这里国内招行银行为例 给大家介绍如何填写 以及相关注意事项</p><h2 id="填写账户信息"><a href="#填写账户信息" class="headerlink" title="填写账户信息"></a>填写账户信息</h2><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240406125038367.png" alt="image-20240406125038367"></p><ul><li><strong>银行名称</strong>：China Merchants Bank（填写英文名称 输入一部分英文网页会自动搜索 然后我们只需要进行选择即可)</li><li><strong>SWIFT 代码：</strong>CMBCCNBS (选择好银行对应名称后 该代码会自动补全 当然我们也可以手动填写)</li><li><strong>分行地址:</strong> 这个只需要填写一个空格即可 注意是英文空格 需要将输入法切换至英文输入状态</li><li><strong>账号：</strong>招商银行一卡通卡号</li></ul><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;目前国外的大部分平台都支持&lt;code&gt;Paypal&lt;/code&gt;收付款 如果你在某些平台赚取了一些美元需要通过&lt;code&gt;Paypal&lt;/c
      
    
    </summary>
    
    
    
      <category term="Paypal" scheme="https://code.newban.cn/tags/Paypal/"/>
    
  </entry>
  
  <entry>
    <title>谷歌Adsense的PIN码接收问题</title>
    <link href="https://code.newban.cn/447.html"/>
    <id>https://code.newban.cn/447.html</id>
    <published>2024-04-05T11:14:19.000Z</published>
    <updated>2024-04-08T14:00:52.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>当<code>Google Adsense</code>账户收益达到10美元时 会触发<code>PIN</code>码验证 为六位数字验证码 该码以国际挂号信的方式按照<code>Adsense</code>上填写的联系地址进行邮寄 国内大概一个月左右就能收到</p><h2 id="提高PIN码收取成功率"><a href="#提高PIN码收取成功率" class="headerlink" title="提高PIN码收取成功率"></a>提高PIN码收取成功率</h2><p>由于国际挂号信没有电话信息的 <code>Adsense</code>也未提供联系电话输入栏  这种形式的邮寄很容易造成收不到件  尤其是国内非一线城市</p><p>我之前收<code>PIN</code>码 就是没有填写联系电话  然后隔三差五往邮局跑 有些费劲  还好最后总算收到了</p><p>为了避免像我这样折腾 建议大家在地址栏补上自己的联系电话 这一招是很多网友测试过可行的 格式如下图:</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240406132833839.png" alt="image-20240406132833839"></p><ol><li>地址填写中文</li><li>地址填写办公楼地址更容易收到Pin码</li><li>地址栏加上姓名及联系电话，备注“到件联系1xxxxxxxx88 xx女士/先生”</li><li>邮编一定填写精确</li></ol><h2 id="仍然收不到PIN码怎么办"><a href="#仍然收不到PIN码怎么办" class="headerlink" title="仍然收不到PIN码怎么办"></a>仍然收不到PIN码怎么办</h2><p>如果连续四次申请PIN码都未能收到 那么<code>Google Adense</code> 平台会提供一个人工验证通道</p><p><a href="https://support.google.com/adsense/contact/id_verification" target="_blank" rel="noopener">点击进入验证通道</a></p><p>人工验证需要填写姓名、电子邮件、发布商 ID、上传身份证照片 另外需要将身份证上的地址和 <code>Google Adsense</code> 账户的地址保持一致</p><p>待 <code>Google</code>审核通过后 谷歌就会发邮件告诉你已经通过验证</p><p><strong>本文为作者原创 转载时请注明出处 谢谢</strong></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;当&lt;code&gt;Google Adsense&lt;/code&gt;账户收益达到10美元时 会触发&lt;code&gt;PIN&lt;/code&gt;码验证 为六位数字验证
      
    
    </summary>
    
    
    
      <category term="adsense" scheme="https://code.newban.cn/tags/adsense/"/>
    
  </entry>
  
  <entry>
    <title>谷歌Adsense大陆地区如何填写收款信息</title>
    <link href="https://code.newban.cn/445.html"/>
    <id>https://code.newban.cn/445.html</id>
    <published>2024-04-05T09:14:19.000Z</published>
    <updated>2024-04-08T14:00:52.129Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自 2020年起<code>Google AdSense</code>暂停西联汇款，采用电汇方式付款。经过很多网友推荐，目前招商银行一卡通比较好用：没有手续费，收款稳定，一般也不要求提供证明文件，手机APP即可完成结汇。</p><p>本文一起来看看，谷歌adsense后台付款方式，招行银行一卡通信息如何填写</p><h2 id="添加AdSense付款方式"><a href="#添加AdSense付款方式" class="headerlink" title="添加AdSense付款方式"></a>添加AdSense付款方式</h2><p>前提当然是你要先申请一张招商银行一卡通。</p><blockquote><p><strong>注意：</strong><br>银行卡必须为一类账户，二类及以下账户没有收款外币权限。<br>开通网银和手机银行。</p></blockquote><p>登陆<code>Google AdSense</code>管理后台点击付款→付款信息→管理付款方式，添加付款方式。</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240405212739394.png" alt="image-20240405212739394"></p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/%E8%B0%B7%E6%AD%8CAdsense%E6%B7%BB%E5%8A%A0%E4%BB%98%E6%AC%BE%E6%96%B9%E5%BC%8F%EF%BC%8C%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%E4%BF%A1%E6%81%AF%E5%A6%82%E4%BD%95%E5%A1%AB%E5%86%99%EF%BC%9F01.jpg" alt="Adsense添加付款方式，招商银行信息如何填写？01"></p><ul><li><strong>付款人 ID（可选）：</strong>不用填</li><li><strong>银行账户上的姓名：</strong>XING MINGMING（姓名拼音，大写，姓和名之间空格）</li><li><strong>银行名称</strong>：China Merchants Bank, H.O. Shenzhen, China（招行总行，不管哪个地方办理的卡都一样）</li><li><strong>SWIFT BIC：</strong>CMBCCNBS</li><li><strong>账号：</strong>招商银行一卡通卡号</li><li><strong>重新输入账号：</strong>招商银行一卡通卡号</li><li><strong>中转银行</strong>：不填</li><li><strong>最终汇入方或最终收款人</strong>：不用填</li><li>勾选设为主要付款方式</li></ul><p>填写完成后，点击保存即可！</p><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/image-20240405211906512.png" alt="image-20240405211906512"></p><h2 id="AdSense付款"><a href="#AdSense付款" class="headerlink" title="AdSense付款"></a>AdSense付款</h2><p>当谷歌<code>AdSense</code>账号余额达到<code>$100</code>，谷歌<code>AdSense</code>固定在每个月21日（中国时间22日）发起付款，1-3工作日可收到汇款。</p><h2 id="招行APP结汇"><a href="#招行APP结汇" class="headerlink" title="招行APP结汇"></a>招行APP结汇</h2><p>下载安装登陆招商银行一卡通APP，找到【外汇结汇】，点开后点击【去结汇】<br>在【结汇委托】界面：</p><ul><li><strong>卖出货币：</strong>选择美元现汇</li><li><strong>结汇资金来源：</strong>选择【其他经常转移】或【职工报酬和赡家款】</li><li><strong>结汇金额：</strong>输入要结汇的金额</li></ul><p><img src="https://gitee.com/songjianzaina/site_img/raw/master/img/%E8%B0%B7%E6%AD%8CAdsense%E6%B7%BB%E5%8A%A0%E4%BB%98%E6%AC%BE%E6%96%B9%E5%BC%8F%EF%BC%8C%E6%8B%9B%E5%95%86%E9%93%B6%E8%A1%8C%E4%BF%A1%E6%81%AF%E5%A6%82%E4%BD%95%E5%A1%AB%E5%86%99%EF%BC%9F04.jpg" alt="Adsense添加付款方式，招商银行信息如何填写？04"></p><p>最后点击确定，输入密码即可成功结汇，结汇后的人民币就自动打入银行卡。</p><blockquote><p><strong>注意：</strong><br>每个人年度结汇总额度（$50000），如果超出可到银行柜台申请额度。<br>结汇业务办理时间是 8:30-22:00。</p></blockquote><p><strong>本文转载自</strong> : <a href="https://zyc420.com/6343.html" target="_blank" rel="noopener">自由超</a></p><p><img src="https://gitee.com/songjianzaina/SavePicGoPic/raw/master/img/20191119095516.png" alt></p><p><em><a href="https://code.newban.cn/">乱码三千 – 点滴积累 ,欢迎来到乱码三千技术博客站</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;自 2020年起&lt;code&gt;Google AdSense&lt;/code&gt;暂停西联汇款，采用电汇方式付款。经过很多网友推荐，目前招商银行一卡通比
      
    
    </summary>
    
    
    
      <category term="adsense" scheme="https://code.newban.cn/tags/adsense/"/>
    
  </entry>
  
</feed>
